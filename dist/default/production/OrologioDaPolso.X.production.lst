

Microchip Technology PIC18 PRO Macro Assembler V1.44 build -154322312 
                                                                                               Sat Jan 27 18:05:11 2018

Microchip Technology Omniscient Code Generator v1.44 (PRO mode) build 201709140600
     1                           	processor	18F26J11
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	pa_nodes0,global,class=CODE,delta=1
    32  0000                     
    33                           ; Version 1.44
    34                           ; Generated 14/09/2017 GMT
    35                           ; 
    36                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F26J11 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     tosu	equ	0xFFF
    68                           tosh	equ	0xFFE
    69                           tosl	equ	0xFFD
    70                           pclath	equ	0xFFA
    71                           tblptru	equ	0xFF8
    72                           tblptrh	equ	0xFF7
    73                           tblptrl	equ	0xFF6
    74                           tablat	equ	0xFF5
    75                           prodl	equ	0xFF3
    76                           wreg	equ	0xFE8
    77                           indf2	equ	0xFDF
    78                           fsr2h	equ	0xFDA
    79                           fsr2l	equ	0xFD9
    80                           
    81                           	psect	smallconst
    82  000F00                     __psmallconst:
    83                           	opt stack 0
    84  000F00  00                 	db	0
    85  000F01                     _Decode:
    86                           	opt stack 0
    87  000F01  3F                 	db	63
    88  000F02  06                 	db	6
    89  000F03  5B                 	db	91
    90  000F04  4F                 	db	79
    91  000F05  66                 	db	102
    92  000F06  6D                 	db	109
    93  000F07  7D                 	db	125
    94  000F08  07                 	db	7
    95  000F09  7F                 	db	127
    96  000F0A  6F                 	db	111
    97  000F0B  77                 	db	119
    98  000F0C  7C                 	db	124
    99  000F0D  58                 	db	88
   100  000F0E  5E                 	db	94
   101  000F0F  79                 	db	121
   102  000F10  71                 	db	113
   103  000F11                     __end_of_Decode:
   104                           	opt stack 0
   105  000F11  00                 	db	0	; dummy byte at the end
   106  0000                     tosu	equ	0xFFF
   107                           tosh	equ	0xFFE
   108                           tosl	equ	0xFFD
   109                           pclath	equ	0xFFA
   110                           tblptru	equ	0xFF8
   111                           tblptrh	equ	0xFF7
   112                           tblptrl	equ	0xFF6
   113                           tablat	equ	0xFF5
   114                           prodl	equ	0xFF3
   115                           wreg	equ	0xFE8
   116                           indf2	equ	0xFDF
   117                           fsr2h	equ	0xFDA
   118                           fsr2l	equ	0xFD9
   119                           
   120                           	psect	nvCOMRAM
   121  00001D                     __pnvCOMRAM:
   122                           	opt stack 0
   123  00001D                     _pPort:
   124                           	opt stack 0
   125  00001D                     	ds	2
   126  00001F                     _DigitController:
   127                           	opt stack 0
   128  00001F                     	ds	2
   129  0000                     _RPOR18	set	3800
   130  0000                     _RPOR17	set	3799
   131  0000                     _RPOR16	set	3798
   132  0000                     _RPOR15	set	3797
   133  0000                     _PPSCONbits	set	3839
   134  0000                     _RTCCFG	set	3903
   135  0000                     _PADCFG1	set	3900
   136  0000                     _ANCON1	set	3913
   137  0000                     _REFOCON	set	3901
   138  0000                     _RTCCFGbits	set	3903
   139  0000                     _RTCWREN	set	31229
   140  0000                     _RTCVALH	set	3993
   141  0000                     _RTCVALL	set	3992
   142  0000                     _T1CON	set	4045
   143  0000                     _OSCCON	set	4051
   144  0000                     _OSCTUNE	set	3995
   145  0000                     _PORTC	set	3970
   146  0000                     _PSTR1CONbits	set	4031
   147  0000                     _TRISB	set	3987
   148  0000                     _TRISC	set	3988
   149  0000                     _CCPR1L	set	4027
   150  0000                     _CCP1CONbits	set	4026
   151  0000                     _PSTR1CON	set	4031
   152  0000                     _CCP1CON	set	4026
   153  0000                     _T2CON	set	4042
   154  0000                     _PR2	set	4043
   155  0000                     _PORTB	set	3969
   156                           
   157                           ; #config settings
   158  0000                     tosu	equ	0xFFF
   159                           tosh	equ	0xFFE
   160                           tosl	equ	0xFFD
   161                           pclath	equ	0xFFA
   162                           tblptru	equ	0xFF8
   163                           tblptrh	equ	0xFF7
   164                           tblptrl	equ	0xFF6
   165                           tablat	equ	0xFF5
   166                           prodl	equ	0xFF3
   167                           wreg	equ	0xFE8
   168                           indf2	equ	0xFDF
   169                           fsr2h	equ	0xFDA
   170                           fsr2l	equ	0xFD9
   171                           
   172                           	psect	cinit
   173  0012C0                     __pcinit:
   174                           	opt stack 0
   175  0012C0                     start_initialization:
   176                           	opt stack 0
   177  0012C0                     __initialization:
   178                           	opt stack 0
   179                           
   180                           ; Clear objects allocated to COMRAM (13 bytes)
   181  0012C0  EE00  F010         	lfsr	0,__pbssCOMRAM
   182  0012C4  0E0D               	movlw	13
   183  0012C6                     clear_0:
   184  0012C6  6AEE               	clrf	postinc0,c
   185  0012C8  06E8               	decf	wreg,f,c
   186  0012CA  E1FD               	bnz	clear_0
   187  0012CC                     end_of_initialization:
   188                           	opt stack 0
   189  0012CC                     __end_of__initialization:
   190                           	opt stack 0
   191  0012CC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   192  0012CE  6EF8               	movwf	tblptru,c
   193  0012D0  0100               	movlb	0
   194  0012D2  EFF8  F007         	goto	_main	;jump to C main() function
   195                           tosu	equ	0xFFF
   196                           tosh	equ	0xFFE
   197                           tosl	equ	0xFFD
   198                           pclath	equ	0xFFA
   199                           tblptru	equ	0xFF8
   200                           tblptrh	equ	0xFF7
   201                           tblptrl	equ	0xFF6
   202                           tablat	equ	0xFF5
   203                           prodl	equ	0xFF3
   204                           postinc0	equ	0xFEE
   205                           wreg	equ	0xFE8
   206                           indf2	equ	0xFDF
   207                           fsr2h	equ	0xFDA
   208                           fsr2l	equ	0xFD9
   209                           
   210                           	psect	bssCOMRAM
   211  000010                     __pbssCOMRAM:
   212                           	opt stack 0
   213  000010                     _digit:
   214                           	opt stack 0
   215  000010                     	ds	1
   216  000011                     _dp:
   217                           	opt stack 0
   218  000011                     	ds	1
   219  000012                     _digit4:
   220                           	opt stack 0
   221  000012                     	ds	1
   222  000013                     _digit3:
   223                           	opt stack 0
   224  000013                     	ds	1
   225  000014                     _digit2:
   226                           	opt stack 0
   227  000014                     	ds	1
   228  000015                     _digit1:
   229                           	opt stack 0
   230  000015                     	ds	1
   231  000016                     _dt:
   232                           	opt stack 0
   233  000016                     	ds	7
   234                           tosu	equ	0xFFF
   235                           tosh	equ	0xFFE
   236                           tosl	equ	0xFFD
   237                           pclath	equ	0xFFA
   238                           tblptru	equ	0xFF8
   239                           tblptrh	equ	0xFF7
   240                           tblptrl	equ	0xFF6
   241                           tablat	equ	0xFF5
   242                           prodl	equ	0xFF3
   243                           postinc0	equ	0xFEE
   244                           wreg	equ	0xFE8
   245                           indf2	equ	0xFDF
   246                           fsr2h	equ	0xFDA
   247                           fsr2l	equ	0xFD9
   248                           
   249                           	psect	cstackCOMRAM
   250  000001                     __pcstackCOMRAM:
   251                           	opt stack 0
   252  000001                     DPOn@dp_n:
   253                           	opt stack 0
   254  000001                     DPOff@dp_n:
   255                           	opt stack 0
   256  000001                     SetCouples@right:
   257                           	opt stack 0
   258  000001                     SetPwm@duty:
   259                           	opt stack 0
   260  000001                     DisplayController@digits:
   261                           	opt stack 0
   262  000001                     GetDateTime@pdt:
   263                           	opt stack 0
   264  000001                     SetupOutputPort@port:
   265                           	opt stack 0
   266  000001                     SetupDigitController@controller:
   267                           	opt stack 0
   268                           
   269                           ; 2 bytes @ 0x0
   270  000001                     	ds	1
   271  000002                     ??_GetDateTime:
   272  000002                     ??_SetCouples:
   273  000002                     DisplayRefresh@dgt:
   274                           	opt stack 0
   275                           
   276                           ; 1 bytes @ 0x1
   277  000002                     	ds	1
   278  000003                     SetCouples@lx10:
   279                           	opt stack 0
   280                           
   281                           ; 1 bytes @ 0x2
   282  000003                     	ds	1
   283  000004                     SetCouples@rx10:
   284                           	opt stack 0
   285                           
   286                           ; 1 bytes @ 0x3
   287  000004                     	ds	1
   288  000005                     SetCouples@lx1:
   289                           	opt stack 0
   290                           
   291                           ; 1 bytes @ 0x4
   292  000005                     	ds	1
   293  000006                     SetCouples@rx1:
   294                           	opt stack 0
   295                           
   296                           ; 1 bytes @ 0x5
   297  000006                     	ds	1
   298  000007                     SetCouples@left:
   299                           	opt stack 0
   300                           
   301                           ; 1 bytes @ 0x6
   302  000007                     	ds	1
   303  000008                     SetCouples@pDecode:
   304                           	opt stack 0
   305                           
   306                           ; 1 bytes @ 0x7
   307  000008                     	ds	1
   308  000009                     ??_main:
   309                           
   310                           ; 1 bytes @ 0x8
   311  000009                     	ds	1
   312  00000A                     main@brightnessdelay:
   313                           	opt stack 0
   314                           
   315                           ; 2 bytes @ 0x9
   316  00000A                     	ds	2
   317  00000C                     main@displaycounter:
   318                           	opt stack 0
   319                           
   320                           ; 2 bytes @ 0xB
   321  00000C                     	ds	2
   322  00000E                     main@bright:
   323                           	opt stack 0
   324                           
   325                           ; 2 bytes @ 0xD
   326  00000E                     	ds	2
   327                           tosu	equ	0xFFF
   328                           tosh	equ	0xFFE
   329                           tosl	equ	0xFFD
   330                           pclath	equ	0xFFA
   331                           tblptru	equ	0xFF8
   332                           tblptrh	equ	0xFF7
   333                           tblptrl	equ	0xFF6
   334                           tablat	equ	0xFF5
   335                           prodl	equ	0xFF3
   336                           postinc0	equ	0xFEE
   337                           wreg	equ	0xFE8
   338                           indf2	equ	0xFDF
   339                           fsr2h	equ	0xFDA
   340                           fsr2l	equ	0xFD9
   341                           
   342 ;;
   343 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   344 ;;
   345 ;; *************** function _main *****************
   346 ;; Defined at:
   347 ;;		line 131 in file "main.c"
   348 ;; Parameters:    Size  Location     Type
   349 ;;		None
   350 ;; Auto vars:     Size  Location     Type
   351 ;;  bright          2   13[COMRAM] int 
   352 ;;  displaycount    2   11[COMRAM] int 
   353 ;;  brightnessde    2    9[COMRAM] int 
   354 ;;  digit           2    0        int 
   355 ;; Return value:  Size  Location     Type
   356 ;;                  1    wreg      void 
   357 ;; Registers used:
   358 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   359 ;; Tracked objects:
   360 ;;		On entry : 0/0
   361 ;;		On exit  : 0/0
   362 ;;		Unchanged: 0/0
   363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   365 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   366 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   367 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   368 ;;Total ram usage:        7 bytes
   369 ;; Hardware stack levels required when called:    2
   370 ;; This function calls:
   371 ;;		_DPOff
   372 ;;		_DPOn
   373 ;;		_DisplayRefresh
   374 ;;		_GetDateTime
   375 ;;		_SetCouples
   376 ;;		_SetPwm
   377 ;;		_SetupDigitController
   378 ;;		_SetupIOPins
   379 ;;		_SetupOutputPort
   380 ;;		_SetupPWM
   381 ;;		_SetupRTCC
   382 ;; This function is called by:
   383 ;;		Startup code after reset
   384 ;; This function uses a non-reentrant model
   385 ;;
   386                           
   387                           	psect	text0
   388  000FF0                     __ptext0:
   389                           	opt stack 0
   390  000FF0                     _main:
   391                           	opt stack 29
   392                           
   393                           ;main.c: 132: SetupPWM();
   394                           
   395                           ;incstack = 0
   396  000FF0  EC3D  F009         	call	_SetupPWM	;wreg free
   397                           
   398                           ;main.c: 133: SetupIOPins();
   399  000FF4  EC7C  F009         	call	_SetupIOPins	;wreg free
   400                           
   401                           ; BSR set to: 14
   402                           ;main.c: 134: SetupOutputPort(&PORTB);
   403  000FF8  0E81               	movlw	129
   404  000FFA  6E01               	movwf	SetupOutputPort@port,c
   405  000FFC  0E0F               	movlw	15
   406  000FFE  6E02               	movwf	SetupOutputPort@port+1,c
   407  001000  EC72  F009         	call	_SetupOutputPort	;wreg free
   408                           
   409                           ; BSR set to: 14
   410                           ;main.c: 135: SetupDigitController(DisplayController);
   411  001004  0ED8               	movlw	low _DisplayController
   412  001006  6E01               	movwf	SetupDigitController@controller,c
   413  001008  0E11               	movlw	high _DisplayController
   414  00100A  6E02               	movwf	SetupDigitController@controller+1,c
   415  00100C  EC77  F009         	call	_SetupDigitController	;wreg free
   416                           
   417                           ;main.c: 136: SetupRTCC();
   418  001010  EC2A  F009         	call	_SetupRTCC	;wreg free
   419                           
   420                           ; BSR set to: 15
   421                           ;main.c: 137: PORTC = 0;
   422  001014  6A82               	clrf	3970,c	;volatile
   423                           
   424                           ; BSR set to: 15
   425                           ;main.c: 138: CCPR1L= 0x0F;
   426  001016  0E0F               	movlw	15
   427  001018  6EBB               	movwf	4027,c	;volatile
   428                           
   429                           ; BSR set to: 15
   430                           ;main.c: 140: int digit = 0;
   431  00101A  6A0F               	clrf	main@bright+1,c
   432  00101C  0E0A               	movlw	10
   433  00101E  6E0E               	movwf	main@bright,c
   434                           
   435                           ; BSR set to: 15
   436                           ;main.c: 141: int brightnessdelay = 0;
   437  001020  6A0A               	clrf	main@brightnessdelay,c
   438  001022  6A0B               	clrf	main@brightnessdelay+1,c
   439                           
   440                           ; BSR set to: 15
   441                           ;main.c: 142: int displaycounter = 0;
   442  001024  6A0C               	clrf	main@displaycounter,c
   443  001026  6A0D               	clrf	main@displaycounter+1,c
   444  001028                     l1318:
   445                           
   446                           ;main.c: 145: {
   447                           ;main.c: 148: if (RTCCFGbits.HALFSEC)
   448  001028  010F               	movlb	15	; () banked
   449  00102A  A73F               	btfss	63,3,b	;volatile
   450  00102C  D004               	goto	l1322
   451                           
   452                           ; BSR set to: 15
   453                           ;main.c: 150: DPOn(1);
   454  00102E  0E01               	movlw	1
   455  001030  EC02  F009         	call	_DPOn
   456  001034  D003               	goto	l1324
   457  001036                     l1322:
   458                           
   459                           ; BSR set to: 15
   460                           ;main.c: 151: else
   461                           ;main.c: 153: DPOff(1);
   462  001036  0E01               	movlw	1
   463  001038  EC16  F009         	call	_DPOff
   464  00103C                     l1324:
   465                           
   466                           ;main.c: 154: DisplayRefresh();
   467  00103C  EC89  F007         	call	_DisplayRefresh	;wreg free
   468                           
   469                           ;main.c: 156: if (brightnessdelay >60)
   470  001040  BE0B               	btfsc	main@brightnessdelay+1,7,c
   471  001042  D036               	goto	l1354
   472  001044  500B               	movf	main@brightnessdelay+1,w,c
   473  001046  E103               	bnz	u420
   474  001048  0E3D               	movlw	61
   475  00104A  5C0A               	subwf	main@brightnessdelay,w,c
   476  00104C  E331               	bnc	l1354
   477  00104E                     u420:
   478                           
   479                           ;main.c: 157: {
   480                           ;main.c: 158: if (bright > 0x2B)
   481  00104E  BE0F               	btfsc	main@bright+1,7,c
   482  001050  D008               	goto	l1332
   483  001052  500F               	movf	main@bright+1,w,c
   484  001054  E103               	bnz	u430
   485  001056  0E2C               	movlw	44
   486  001058  5C0E               	subwf	main@bright,w,c
   487  00105A  E303               	bnc	l1332
   488  00105C                     u430:
   489                           
   490                           ;main.c: 159: bright = 1;
   491  00105C  6A0F               	clrf	main@bright+1,c
   492  00105E  0E01               	movlw	1
   493  001060  6E0E               	movwf	main@bright,c
   494  001062                     l1332:
   495                           
   496                           ;main.c: 160: if (bright & 0x01)
   497  001062  A00E               	btfss	main@bright,0,c
   498  001064  D002               	goto	l256
   499                           
   500                           ;main.c: 161: CCP1CONbits.DC1B0 = 1;
   501  001066  88BA               	bsf	4026,4,c	;volatile
   502  001068  D001               	goto	l257
   503  00106A                     l256:
   504                           
   505                           ;main.c: 162: else
   506                           ;main.c: 163: CCP1CONbits.DC1B0 = 0;
   507  00106A  98BA               	bcf	4026,4,c	;volatile
   508  00106C                     l257:
   509                           
   510                           ;main.c: 164: if (bright & 0x02)
   511  00106C  A20E               	btfss	main@bright,1,c
   512  00106E  D002               	goto	l258
   513                           
   514                           ;main.c: 165: CCP1CONbits.DC1B1 = 1;
   515  001070  8ABA               	bsf	4026,5,c	;volatile
   516  001072  D001               	goto	l1338
   517  001074                     l258:
   518                           
   519                           ;main.c: 166: else
   520                           ;main.c: 167: CCP1CONbits.DC1B1 = 0;
   521  001074  9ABA               	bcf	4026,5,c	;volatile
   522  001076                     l1338:
   523                           
   524                           ;main.c: 169: SetPwm(2);
   525  001076  0E02               	movlw	2
   526  001078  EC50  F009         	call	_SetPwm
   527                           
   528                           ;main.c: 171: bright += 5;
   529  00107C  0E05               	movlw	5
   530  00107E  260E               	addwf	main@bright,f,c
   531  001080  0E00               	movlw	0
   532  001082  220F               	addwfc	main@bright+1,f,c
   533                           
   534                           ;main.c: 172: brightnessdelay = 0;
   535  001084  6A0A               	clrf	main@brightnessdelay,c
   536  001086  6A0B               	clrf	main@brightnessdelay+1,c
   537                           
   538                           ;main.c: 175: GetDateTime(&dt);
   539  001088  0E16               	movlw	low _dt
   540  00108A  6E01               	movwf	GetDateTime@pdt,c
   541  00108C  EC62  F008         	call	_GetDateTime	;wreg free
   542                           
   543                           ; BSR set to: 15
   544                           ;main.c: 176: SetCouples(dt.hour, dt.minute);
   545  001090  C01B  F001         	movff	_dt+5,SetCouples@right
   546  001094  501A               	movf	_dt+4,w,c
   547  001096  ECAB  F008         	call	_SetCouples
   548                           
   549                           ;main.c: 177: displaycounter++;
   550  00109A  4A0C               	infsnz	main@displaycounter,f,c
   551  00109C  2A0D               	incf	main@displaycounter+1,f,c
   552                           
   553                           ;main.c: 178: if (displaycounter > 99)
   554  00109E  BE0D               	btfsc	main@displaycounter+1,7,c
   555  0010A0  D007               	goto	l1354
   556  0010A2  500D               	movf	main@displaycounter+1,w,c
   557  0010A4  E103               	bnz	u460
   558  0010A6  0E64               	movlw	100
   559  0010A8  5C0C               	subwf	main@displaycounter,w,c
   560  0010AA  E302               	bnc	l1354
   561  0010AC                     u460:
   562                           
   563                           ;main.c: 179: displaycounter = 0;
   564  0010AC  6A0C               	clrf	main@displaycounter,c
   565  0010AE  6A0D               	clrf	main@displaycounter+1,c
   566  0010B0                     l1354:
   567                           
   568                           ;main.c: 180: }
   569                           ;main.c: 181: brightnessdelay ++;
   570  0010B0  4A0A               	infsnz	main@brightnessdelay,f,c
   571  0010B2  2A0B               	incf	main@brightnessdelay+1,f,c
   572                           
   573                           ;main.c: 182: _delay((unsigned long)((3)*(8000000/4000.0)));
   574  0010B4  0E08               	movlw	8
   575  0010B6  6E09               	movwf	??_main& (0+255),c
   576  0010B8  0ECA               	movlw	202
   577  0010BA                     u477:
   578  0010BA  2EE8               	decfsz	wreg,f,c
   579  0010BC  D7FE               	bra	u477
   580  0010BE  2E09               	decfsz	??_main& (0+255),f,c
   581  0010C0  D7FC               	bra	u477
   582  0010C2  D7B2               	goto	l1318
   583  0010C4                     __end_of_main:
   584                           	opt stack 0
   585                           tosu	equ	0xFFF
   586                           tosh	equ	0xFFE
   587                           tosl	equ	0xFFD
   588                           pclath	equ	0xFFA
   589                           tblptru	equ	0xFF8
   590                           tblptrh	equ	0xFF7
   591                           tblptrl	equ	0xFF6
   592                           tablat	equ	0xFF5
   593                           prodl	equ	0xFF3
   594                           postinc0	equ	0xFEE
   595                           wreg	equ	0xFE8
   596                           indf2	equ	0xFDF
   597                           fsr2h	equ	0xFDA
   598                           fsr2l	equ	0xFD9
   599                           
   600 ;; *************** function _SetupRTCC *****************
   601 ;; Defined at:
   602 ;;		line 31 in file "RTCC.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;		None
   605 ;; Auto vars:     Size  Location     Type
   606 ;;		None
   607 ;; Return value:  Size  Location     Type
   608 ;;                  1    wreg      void 
   609 ;; Registers used:
   610 ;;		wreg, status,2, cstack
   611 ;; Tracked objects:
   612 ;;		On entry : 3F/E
   613 ;;		On exit  : 3F/F
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   620 ;;Total ram usage:        0 bytes
   621 ;; Hardware stack levels used:    1
   622 ;; Hardware stack levels required when called:    1
   623 ;; This function calls:
   624 ;;		_unlock_RTCC
   625 ;; This function is called by:
   626 ;;		_main
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630                           	psect	text1
   631  001254                     __ptext1:
   632                           	opt stack 0
   633  001254                     _SetupRTCC:
   634                           	opt stack 29
   635                           
   636                           ; BSR set to: 14
   637                           ;RTCC.c: 33: OSCTUNE = 0b10000000;
   638                           
   639                           ;incstack = 0
   640  001254  0E80               	movlw	128
   641  001256  6E9B               	movwf	3995,c	;volatile
   642                           
   643                           ;RTCC.c: 34: OSCCON = 0b01100000;
   644  001258  0E60               	movlw	96
   645  00125A  6ED3               	movwf	4051,c	;volatile
   646                           
   647                           ; BSR set to: 14
   648                           ;RTCC.c: 35: REFOCON = 0b00000000;
   649  00125C  010F               	movlb	15	; () banked
   650  00125E  6B3D               	clrf	61,b	;volatile
   651                           
   652                           ;RTCC.c: 36: T1CON = 0b00001000;
   653  001260  0E08               	movlw	8
   654  001262  6ECD               	movwf	4045,c	;volatile
   655                           
   656                           ;RTCC.c: 37: ANCON1 = 0b00011111;
   657  001264  0E1F               	movlw	31
   658  001266  6F49               	movwf	73,b	;volatile
   659                           
   660                           ;RTCC.c: 38: PADCFG1 = 0b00000010;
   661  001268  0E02               	movlw	2
   662  00126A  6F3C               	movwf	60,b	;volatile
   663                           
   664                           ; BSR set to: 15
   665                           ;RTCC.c: 39: unlock_RTCC();
   666  00126C  EC6B  F009         	call	_unlock_RTCC	;wreg free
   667                           
   668                           ;RTCC.c: 40: RTCCFG = 0b10000000;
   669  001270  0E80               	movlw	128
   670  001272  010F               	movlb	15	; () banked
   671  001274  6F3F               	movwf	63,b	;volatile
   672                           
   673                           ; BSR set to: 15
   674                           ;RTCC.c: 41: RTCWREN = 0;;
   675  001276  9B3F               	bcf	63,5,b	;volatile
   676                           
   677                           ; BSR set to: 15
   678  001278  0C80               	retlw	128	;funcret
   679  00127A                     __end_of_SetupRTCC:
   680                           	opt stack 0
   681                           tosu	equ	0xFFF
   682                           tosh	equ	0xFFE
   683                           tosl	equ	0xFFD
   684                           pclath	equ	0xFFA
   685                           tblptru	equ	0xFF8
   686                           tblptrh	equ	0xFF7
   687                           tblptrl	equ	0xFF6
   688                           tablat	equ	0xFF5
   689                           prodl	equ	0xFF3
   690                           postinc0	equ	0xFEE
   691                           wreg	equ	0xFE8
   692                           indf2	equ	0xFDF
   693                           fsr2h	equ	0xFDA
   694                           fsr2l	equ	0xFD9
   695                           
   696 ;; *************** function _SetupPWM *****************
   697 ;; Defined at:
   698 ;;		line 75 in file "main.c"
   699 ;; Parameters:    Size  Location     Type
   700 ;;		None
   701 ;; Auto vars:     Size  Location     Type
   702 ;;		None
   703 ;; Return value:  Size  Location     Type
   704 ;;                  1    wreg      void 
   705 ;; Registers used:
   706 ;;		wreg, status,2
   707 ;; Tracked objects:
   708 ;;		On entry : 0/0
   709 ;;		On exit  : 3F/E
   710 ;;		Unchanged: 0/0
   711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   716 ;;Total ram usage:        0 bytes
   717 ;; Hardware stack levels used:    1
   718 ;; This function calls:
   719 ;;		Nothing
   720 ;; This function is called by:
   721 ;;		_main
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725                           	psect	text2
   726  00127A                     __ptext2:
   727                           	opt stack 0
   728  00127A                     _SetupPWM:
   729                           	opt stack 30
   730                           
   731                           ;main.c: 77: PPSCONbits.IOLOCK = 0;
   732                           
   733                           ; BSR set to: 15
   734                           ;incstack = 0
   735  00127A  010E               	movlb	14	; () banked
   736  00127C  91FF               	bcf	255,0,b	;volatile
   737                           
   738                           ; BSR set to: 14
   739                           ;main.c: 78: RPOR15 = 14;
   740  00127E  0E0E               	movlw	14
   741  001280  6FD5               	movwf	213,b	;volatile
   742                           
   743                           ;main.c: 79: RPOR16 = 15;
   744  001282  0E0F               	movlw	15
   745  001284  6FD6               	movwf	214,b	;volatile
   746                           
   747                           ;main.c: 80: RPOR17 = 16;
   748  001286  0E10               	movlw	16
   749  001288  6FD7               	movwf	215,b	;volatile
   750                           
   751                           ;main.c: 81: RPOR18 = 17;
   752  00128A  0E11               	movlw	17
   753  00128C  6FD8               	movwf	216,b	;volatile
   754                           
   755                           ; BSR set to: 14
   756                           ;main.c: 82: PPSCONbits.IOLOCK = 1;
   757  00128E  81FF               	bsf	255,0,b	;volatile
   758                           
   759                           ;main.c: 83: PR2 = 0x0A;
   760  001290  0E0A               	movlw	10
   761  001292  6ECB               	movwf	4043,c	;volatile
   762                           
   763                           ;main.c: 84: T2CON = 0b00000100;
   764  001294  0E04               	movlw	4
   765  001296  6ECA               	movwf	4042,c	;volatile
   766                           
   767                           ;main.c: 85: CCP1CON = 0b00001100;
   768  001298  0E0C               	movlw	12
   769  00129A  6EBA               	movwf	4026,c	;volatile
   770                           
   771                           ; BSR set to: 14
   772                           ;main.c: 86: PSTR1CON = 0b00000000;
   773  00129C  6ABF               	clrf	4031,c	;volatile
   774                           
   775                           ; BSR set to: 14
   776  00129E  0012               	return		;funcret
   777  0012A0                     __end_of_SetupPWM:
   778                           	opt stack 0
   779                           tosu	equ	0xFFF
   780                           tosh	equ	0xFFE
   781                           tosl	equ	0xFFD
   782                           pclath	equ	0xFFA
   783                           tblptru	equ	0xFF8
   784                           tblptrh	equ	0xFF7
   785                           tblptrl	equ	0xFF6
   786                           tablat	equ	0xFF5
   787                           prodl	equ	0xFF3
   788                           postinc0	equ	0xFEE
   789                           wreg	equ	0xFE8
   790                           indf2	equ	0xFDF
   791                           fsr2h	equ	0xFDA
   792                           fsr2l	equ	0xFD9
   793                           
   794 ;; *************** function _SetupOutputPort *****************
   795 ;; Defined at:
   796 ;;		line 67 in file "Display.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;  port            2    0[COMRAM] PTR unsigned char 
   799 ;;		 -> PORTB(1), 
   800 ;; Auto vars:     Size  Location     Type
   801 ;;		None
   802 ;; Return value:  Size  Location     Type
   803 ;;                  1    wreg      void 
   804 ;; Registers used:
   805 ;;		wreg, status,2, status,0
   806 ;; Tracked objects:
   807 ;;		On entry : 3F/E
   808 ;;		On exit  : 3F/E
   809 ;;		Unchanged: 3F/0
   810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   811 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   814 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   815 ;;Total ram usage:        2 bytes
   816 ;; Hardware stack levels used:    1
   817 ;; This function calls:
   818 ;;		Nothing
   819 ;; This function is called by:
   820 ;;		_main
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           	psect	text3
   825  0012E4                     __ptext3:
   826                           	opt stack 0
   827  0012E4                     _SetupOutputPort:
   828                           	opt stack 30
   829                           
   830                           ; BSR set to: 14
   831                           ;Display.c: 69: pPort = port;
   832                           
   833                           ; BSR set to: 14
   834                           ;incstack = 0
   835  0012E4  C001  F01D         	movff	SetupOutputPort@port,_pPort
   836  0012E8  C002  F01E         	movff	SetupOutputPort@port+1,_pPort+1
   837                           
   838                           ; BSR set to: 14
   839  0012EC  0012               	return		;funcret
   840  0012EE                     __end_of_SetupOutputPort:
   841                           	opt stack 0
   842                           tosu	equ	0xFFF
   843                           tosh	equ	0xFFE
   844                           tosl	equ	0xFFD
   845                           pclath	equ	0xFFA
   846                           tblptru	equ	0xFF8
   847                           tblptrh	equ	0xFF7
   848                           tblptrl	equ	0xFF6
   849                           tablat	equ	0xFF5
   850                           prodl	equ	0xFF3
   851                           postinc0	equ	0xFEE
   852                           wreg	equ	0xFE8
   853                           indf2	equ	0xFDF
   854                           fsr2h	equ	0xFDA
   855                           fsr2l	equ	0xFD9
   856                           
   857 ;; *************** function _SetupIOPins *****************
   858 ;; Defined at:
   859 ;;		line 103 in file "main.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;		None
   862 ;; Auto vars:     Size  Location     Type
   863 ;;		None
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		wreg, status,2
   868 ;; Tracked objects:
   869 ;;		On entry : 3F/E
   870 ;;		On exit  : 3F/E
   871 ;;		Unchanged: 3F/0
   872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   877 ;;Total ram usage:        0 bytes
   878 ;; Hardware stack levels used:    1
   879 ;; This function calls:
   880 ;;		Nothing
   881 ;; This function is called by:
   882 ;;		_main
   883 ;; This function uses a non-reentrant model
   884 ;;
   885                           
   886                           	psect	text4
   887  0012F8                     __ptext4:
   888                           	opt stack 0
   889  0012F8                     _SetupIOPins:
   890                           	opt stack 30
   891                           
   892                           ; BSR set to: 14
   893                           ;main.c: 105: TRISC = 0b00001111;
   894                           
   895                           ; BSR set to: 14
   896                           ;incstack = 0
   897  0012F8  0E0F               	movlw	15
   898  0012FA  6E94               	movwf	3988,c	;volatile
   899                           
   900                           ; BSR set to: 14
   901                           ;main.c: 106: TRISB = 0b00000000;
   902  0012FC  6A93               	clrf	3987,c	;volatile
   903                           
   904                           ; BSR set to: 14
   905  0012FE  0012               	return		;funcret
   906  001300                     __end_of_SetupIOPins:
   907                           	opt stack 0
   908                           tosu	equ	0xFFF
   909                           tosh	equ	0xFFE
   910                           tosl	equ	0xFFD
   911                           pclath	equ	0xFFA
   912                           tblptru	equ	0xFF8
   913                           tblptrh	equ	0xFF7
   914                           tblptrl	equ	0xFF6
   915                           tablat	equ	0xFF5
   916                           prodl	equ	0xFF3
   917                           postinc0	equ	0xFEE
   918                           wreg	equ	0xFE8
   919                           indf2	equ	0xFDF
   920                           fsr2h	equ	0xFDA
   921                           fsr2l	equ	0xFD9
   922                           
   923 ;; *************** function _SetupDigitController *****************
   924 ;; Defined at:
   925 ;;		line 71 in file "Display.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;  controller      2    0[COMRAM] PTR FTN(unsigned char ,)
   928 ;;		 -> DisplayController(1), 
   929 ;; Auto vars:     Size  Location     Type
   930 ;;		None
   931 ;; Return value:  Size  Location     Type
   932 ;;                  1    wreg      void 
   933 ;; Registers used:
   934 ;;		wreg, status,2, status,0
   935 ;; Tracked objects:
   936 ;;		On entry : 3F/E
   937 ;;		On exit  : 3F/E
   938 ;;		Unchanged: 3F/0
   939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   940 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   943 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   944 ;;Total ram usage:        2 bytes
   945 ;; Hardware stack levels used:    1
   946 ;; This function calls:
   947 ;;		Nothing
   948 ;; This function is called by:
   949 ;;		_main
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953                           	psect	text5
   954  0012EE                     __ptext5:
   955                           	opt stack 0
   956  0012EE                     _SetupDigitController:
   957                           	opt stack 30
   958                           
   959                           ; BSR set to: 14
   960                           ;Display.c: 73: DigitController = controller;
   961                           
   962                           ; BSR set to: 14
   963                           ;incstack = 0
   964  0012EE  C001  F01F         	movff	SetupDigitController@controller,_DigitController
   965  0012F2  C002  F020         	movff	SetupDigitController@controller+1,_DigitController+1
   966                           
   967                           ; BSR set to: 14
   968  0012F6  0012               	return		;funcret
   969  0012F8                     __end_of_SetupDigitController:
   970                           	opt stack 0
   971                           tosu	equ	0xFFF
   972                           tosh	equ	0xFFE
   973                           tosl	equ	0xFFD
   974                           pclath	equ	0xFFA
   975                           tblptru	equ	0xFF8
   976                           tblptrh	equ	0xFF7
   977                           tblptrl	equ	0xFF6
   978                           tablat	equ	0xFF5
   979                           prodl	equ	0xFF3
   980                           postinc0	equ	0xFEE
   981                           wreg	equ	0xFE8
   982                           indf2	equ	0xFDF
   983                           fsr2h	equ	0xFDA
   984                           fsr2l	equ	0xFD9
   985                           
   986 ;; *************** function _SetPwm *****************
   987 ;; Defined at:
   988 ;;		line 89 in file "main.c"
   989 ;; Parameters:    Size  Location     Type
   990 ;;  duty            1    wreg     unsigned char 
   991 ;; Auto vars:     Size  Location     Type
   992 ;;  duty            1    0[COMRAM] unsigned char 
   993 ;; Return value:  Size  Location     Type
   994 ;;                  1    wreg      void 
   995 ;; Registers used:
   996 ;;		wreg, status,2, status,0
   997 ;; Tracked objects:
   998 ;;		On entry : 0/F
   999 ;;		On exit  : 0/0
  1000 ;;		Unchanged: 0/0
  1001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1003 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1005 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1006 ;;Total ram usage:        1 bytes
  1007 ;; Hardware stack levels used:    1
  1008 ;; This function calls:
  1009 ;;		Nothing
  1010 ;; This function is called by:
  1011 ;;		_main
  1012 ;; This function uses a non-reentrant model
  1013 ;;
  1014                           
  1015                           	psect	text6
  1016  0012A0                     __ptext6:
  1017                           	opt stack 0
  1018  0012A0                     _SetPwm:
  1019                           	opt stack 30
  1020                           
  1021                           ; BSR set to: 14
  1022                           ;incstack = 0
  1023                           ;SetPwm@duty stored from wreg
  1024  0012A0  6E01               	movwf	SetPwm@duty,c
  1025                           
  1026                           ;main.c: 91: if (duty & 0x01)
  1027  0012A2  A001               	btfss	SetPwm@duty,0,c
  1028  0012A4  D002               	goto	l228
  1029                           
  1030                           ;main.c: 92: CCP1CONbits.DC1B0 = 1;
  1031  0012A6  88BA               	bsf	4026,4,c	;volatile
  1032  0012A8  D001               	goto	l1122
  1033  0012AA                     l228:
  1034                           
  1035                           ;main.c: 93: else
  1036                           ;main.c: 94: CCP1CONbits.DC1B0 = 0;
  1037  0012AA  98BA               	bcf	4026,4,c	;volatile
  1038  0012AC                     l1122:
  1039                           
  1040                           ;main.c: 95: if (duty & 0x02)
  1041  0012AC  A201               	btfss	SetPwm@duty,1,c
  1042  0012AE  D002               	goto	l230
  1043                           
  1044                           ;main.c: 96: CCP1CONbits.DC1B1 = 1;
  1045  0012B0  8ABA               	bsf	4026,5,c	;volatile
  1046  0012B2  D001               	goto	l1126
  1047  0012B4                     l230:
  1048                           
  1049                           ;main.c: 97: else
  1050                           ;main.c: 98: CCP1CONbits.DC1B1 = 0;
  1051  0012B4  9ABA               	bcf	4026,5,c	;volatile
  1052  0012B6                     l1126:
  1053                           
  1054                           ;main.c: 100: CCPR1L = duty>>2;
  1055  0012B6  4001               	rrncf	SetPwm@duty,w,c
  1056  0012B8  42E8               	rrncf	wreg,f,c
  1057  0012BA  0B3F               	andlw	63
  1058  0012BC  6EBB               	movwf	4027,c	;volatile
  1059  0012BE  0012               	return		;funcret
  1060  0012C0                     __end_of_SetPwm:
  1061                           	opt stack 0
  1062                           tosu	equ	0xFFF
  1063                           tosh	equ	0xFFE
  1064                           tosl	equ	0xFFD
  1065                           pclath	equ	0xFFA
  1066                           tblptru	equ	0xFF8
  1067                           tblptrh	equ	0xFF7
  1068                           tblptrl	equ	0xFF6
  1069                           tablat	equ	0xFF5
  1070                           prodl	equ	0xFF3
  1071                           postinc0	equ	0xFEE
  1072                           wreg	equ	0xFE8
  1073                           indf2	equ	0xFDF
  1074                           fsr2h	equ	0xFDA
  1075                           fsr2l	equ	0xFD9
  1076                           
  1077 ;; *************** function _SetCouples *****************
  1078 ;; Defined at:
  1079 ;;		line 261 in file "Display.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;  left            1    wreg     unsigned char 
  1082 ;;  right           1    0[COMRAM] unsigned char 
  1083 ;; Auto vars:     Size  Location     Type
  1084 ;;  left            1    6[COMRAM] unsigned char 
  1085 ;;  pDecode         1    7[COMRAM] PTR const unsigned char 
  1086 ;;		 -> Decode(16), 
  1087 ;;  rx1             1    5[COMRAM] unsigned char 
  1088 ;;  lx1             1    4[COMRAM] unsigned char 
  1089 ;;  rx10            1    3[COMRAM] unsigned char 
  1090 ;;  lx10            1    2[COMRAM] unsigned char 
  1091 ;; Return value:  Size  Location     Type
  1092 ;;                  1    wreg      unsigned char 
  1093 ;; Registers used:
  1094 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1095 ;; Tracked objects:
  1096 ;;		On entry : 3F/F
  1097 ;;		On exit  : 0/0
  1098 ;;		Unchanged: 0/0
  1099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1100 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1101 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1102 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1103 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1104 ;;Total ram usage:        8 bytes
  1105 ;; Hardware stack levels used:    1
  1106 ;; This function calls:
  1107 ;;		Nothing
  1108 ;; This function is called by:
  1109 ;;		_main
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           	psect	text7
  1114  001156                     __ptext7:
  1115                           	opt stack 0
  1116  001156                     _SetCouples:
  1117                           	opt stack 30
  1118                           
  1119                           ;incstack = 0
  1120                           ;SetCouples@left stored from wreg
  1121  001156  6E07               	movwf	SetCouples@left,c
  1122                           
  1123                           ;Display.c: 263: const uint8_t *pDecode = &Decode[0];
  1124  001158  0E01               	movlw	low _Decode
  1125  00115A  6E08               	movwf	SetCouples@pDecode,c
  1126                           
  1127                           ;Display.c: 264: uint8_t lx10 = 0;
  1128  00115C  6A03               	clrf	SetCouples@lx10,c
  1129                           
  1130                           ;Display.c: 265: uint8_t rx10 = 0;
  1131  00115E  6A04               	clrf	SetCouples@rx10,c
  1132                           
  1133                           ;Display.c: 266: uint8_t lx1 = 0;
  1134  001160  6A05               	clrf	SetCouples@lx1,c
  1135                           
  1136                           ;Display.c: 267: uint8_t rx1 = 0;
  1137  001162  6A06               	clrf	SetCouples@rx1,c
  1138                           
  1139                           ;Display.c: 268: if (left < 99)
  1140  001164  0E63               	movlw	99
  1141  001166  6007               	cpfslt	SetCouples@left,c
  1142  001168  D016               	goto	l1256
  1143  00116A  D003               	goto	l1246
  1144  00116C                     l1242:
  1145                           
  1146                           ;Display.c: 271: {
  1147                           ;Display.c: 272: left -= 10;
  1148  00116C  0E0A               	movlw	10
  1149  00116E  5E07               	subwf	SetCouples@left,f,c
  1150                           
  1151                           ;Display.c: 273: lx10++;
  1152  001170  2A03               	incf	SetCouples@lx10,f,c
  1153  001172                     l1246:
  1154  001172  0E0A               	movlw	10
  1155  001174  6007               	cpfslt	SetCouples@left,c
  1156  001176  D7FA               	goto	l1242
  1157                           
  1158                           ;Display.c: 274: }
  1159                           ;Display.c: 275: digit1 = *(pDecode + lx10);
  1160  001178  5008               	movf	SetCouples@pDecode,w,c
  1161  00117A  2403               	addwf	SetCouples@lx10,w,c
  1162  00117C  D826               	call	PL6	;call to abstracted procedure
  1163  00117E  CFF5 F015          	movff	tablat,_digit1
  1164                           
  1165                           ;Display.c: 276: while (left > 0)
  1166  001182  D002               	goto	l1252
  1167  001184                     l1250:
  1168                           
  1169                           ;Display.c: 277: {
  1170                           ;Display.c: 278: left -= 1;
  1171  001184  0607               	decf	SetCouples@left,f,c
  1172                           
  1173                           ;Display.c: 279: lx1++;
  1174  001186  2A05               	incf	SetCouples@lx1,f,c
  1175  001188                     l1252:
  1176  001188  5007               	movf	SetCouples@left,w,c
  1177  00118A  E1FC               	bnz	l1250
  1178                           
  1179                           ;Display.c: 280: }
  1180                           ;Display.c: 281: digit2 = *(pDecode + lx1);
  1181  00118C  5008               	movf	SetCouples@pDecode,w,c
  1182  00118E  2405               	addwf	SetCouples@lx1,w,c
  1183  001190  D81C               	call	PL6	;call to abstracted procedure
  1184  001192  CFF5 F014          	movff	tablat,_digit2
  1185  001196                     l1256:
  1186                           
  1187                           ;Display.c: 282: }
  1188                           ;Display.c: 284: if (right < 99)
  1189  001196  0E63               	movlw	99
  1190  001198  6001               	cpfslt	SetCouples@right,c
  1191  00119A  0C63               	retlw	99
  1192  00119C  D003               	goto	l1264
  1193  00119E                     l1260:
  1194                           
  1195                           ;Display.c: 287: {
  1196                           ;Display.c: 288: right -= 10;
  1197  00119E  0E0A               	movlw	10
  1198  0011A0  5E01               	subwf	SetCouples@right,f,c
  1199                           
  1200                           ;Display.c: 289: rx10++;
  1201  0011A2  2A04               	incf	SetCouples@rx10,f,c
  1202  0011A4                     l1264:
  1203  0011A4  0E0A               	movlw	10
  1204  0011A6  6001               	cpfslt	SetCouples@right,c
  1205  0011A8  D7FA               	goto	l1260
  1206                           
  1207                           ;Display.c: 290: }
  1208                           ;Display.c: 291: digit3 = *(pDecode + rx10);
  1209  0011AA  5008               	movf	SetCouples@pDecode,w,c
  1210  0011AC  2404               	addwf	SetCouples@rx10,w,c
  1211  0011AE  D80D               	call	PL6	;call to abstracted procedure
  1212  0011B0  CFF5 F013          	movff	tablat,_digit3
  1213                           
  1214                           ;Display.c: 292: while (right > 0)
  1215  0011B4  D002               	goto	l1270
  1216  0011B6                     l1268:
  1217                           
  1218                           ;Display.c: 293: {
  1219                           ;Display.c: 294: right -= 1;
  1220  0011B6  0601               	decf	SetCouples@right,f,c
  1221                           
  1222                           ;Display.c: 295: rx1++;
  1223  0011B8  2A06               	incf	SetCouples@rx1,f,c
  1224  0011BA                     l1270:
  1225  0011BA  5001               	movf	SetCouples@right,w,c
  1226  0011BC  E1FC               	bnz	l1268
  1227                           
  1228                           ;Display.c: 296: }
  1229                           ;Display.c: 297: digit4 = *(pDecode + rx1);
  1230  0011BE  5008               	movf	SetCouples@pDecode,w,c
  1231  0011C0  2406               	addwf	SetCouples@rx1,w,c
  1232  0011C2  D803               	call	PL6	;call to abstracted procedure
  1233  0011C4  CFF5 F012          	movff	tablat,_digit4
  1234  0011C8  0012               	return		;funcret
  1235  0011CA                     __end_of_SetCouples:
  1236                           	opt stack 0
  1237  0011CA                     PL6:
  1238                           	opt stack 30
  1239  0011CA  6E02               	movwf	??_SetCouples& (0+255),c
  1240  0011CC  C002  FFF6         	movff	??_SetCouples,tblptrl
  1241  0011D0                     	if	1	;There is more than 1 active tblptr byte
  1242  0011D0  0E0F               	movlw	high __smallconst
  1243  0011D2  6EF7               	movwf	tblptrh,c
  1244  0011D4                     	endif
  1245  0011D4                     	if	0	;tblptru may be non-zero
  1246  0011D4                     	endif
  1247  0011D4                     	if	0	;tblptru may be non-zero
  1248  0011D4                     	endif
  1249  0011D4  0008               	tblrd		*
  1250  0011D6  0012               	return	
  1251  0011D8                     __end_ofPL6:
  1252                           	opt stack 0
  1253                           tosu	equ	0xFFF
  1254                           tosh	equ	0xFFE
  1255                           tosl	equ	0xFFD
  1256                           pclath	equ	0xFFA
  1257                           tblptru	equ	0xFF8
  1258                           tblptrh	equ	0xFF7
  1259                           tblptrl	equ	0xFF6
  1260                           tablat	equ	0xFF5
  1261                           prodl	equ	0xFF3
  1262                           postinc0	equ	0xFEE
  1263                           wreg	equ	0xFE8
  1264                           indf2	equ	0xFDF
  1265                           fsr2h	equ	0xFDA
  1266                           fsr2l	equ	0xFD9
  1267                           
  1268 ;; *************** function _GetDateTime *****************
  1269 ;; Defined at:
  1270 ;;		line 45 in file "RTCC.c"
  1271 ;; Parameters:    Size  Location     Type
  1272 ;;  pdt             1    0[COMRAM] PTR struct .
  1273 ;;		 -> dt(7), 
  1274 ;; Auto vars:     Size  Location     Type
  1275 ;;  dummy           1    0        unsigned char 
  1276 ;; Return value:  Size  Location     Type
  1277 ;;                  1    wreg      void 
  1278 ;; Registers used:
  1279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1280 ;; Tracked objects:
  1281 ;;		On entry : 0/F
  1282 ;;		On exit  : 3F/F
  1283 ;;		Unchanged: 0/0
  1284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1285 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1287 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1288 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1289 ;;Total ram usage:        2 bytes
  1290 ;; Hardware stack levels used:    1
  1291 ;; Hardware stack levels required when called:    1
  1292 ;; This function calls:
  1293 ;;		_unlock_RTCC
  1294 ;; This function is called by:
  1295 ;;		_main
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299                           	psect	text8
  1300  0010C4                     __ptext8:
  1301                           	opt stack 0
  1302  0010C4                     _GetDateTime:
  1303                           	opt stack 29
  1304                           
  1305                           ;RTCC.c: 47: while (RTCCFGbits.RTCSYNC);
  1306                           
  1307                           ;incstack = 0
  1308  0010C4  010F               	movlb	15	; () banked
  1309  0010C6  B93F               	btfsc	63,4,b	;volatile
  1310  0010C8  D7FD               	goto	_GetDateTime
  1311                           
  1312                           ; BSR set to: 15
  1313                           ;RTCC.c: 48: unlock_RTCC();
  1314  0010CA  EC6B  F009         	call	_unlock_RTCC	;wreg free
  1315                           
  1316                           ;RTCC.c: 49: RTCCFGbits.RTCPTR0 = 1;
  1317  0010CE  010F               	movlb	15	; () banked
  1318  0010D0  813F               	bsf	63,0,b	;volatile
  1319                           
  1320                           ; BSR set to: 15
  1321                           ;RTCC.c: 50: RTCCFGbits.RTCPTR1 = 1;
  1322  0010D2  833F               	bsf	63,1,b	;volatile
  1323                           
  1324                           ; BSR set to: 15
  1325                           ;RTCC.c: 51: pdt->year = (RTCVALL >> 4)*10 + (RTCVALL & 0x0F);
  1326  0010D4  5001               	movf	GetDateTime@pdt,w,c
  1327  0010D6  6ED9               	movwf	fsr2l,c
  1328  0010D8  6ADA               	clrf	fsr2h,c
  1329  0010DA  CF98 F002          	movff	3992,??_GetDateTime	;volatile
  1330  0010DE  0E0F               	movlw	15
  1331  0010E0  1602               	andwf	??_GetDateTime,f,c
  1332  0010E2  3898               	swapf	3992,w,c	;volatile
  1333  0010E4  D82C               	call	PL4	;call to abstracted procedure
  1334                           
  1335                           ; BSR set to: 15
  1336                           ;RTCC.c: 52: uint8_t dummy = RTCVALH;
  1337  0010E6  5099               	movf	3993,w,c	;volatile
  1338                           
  1339                           ; BSR set to: 15
  1340                           ;RTCC.c: 53: pdt->day = (RTCVALL >> 4)*10 + (RTCVALL & 0x0F);
  1341  0010E8  5001               	movf	GetDateTime@pdt,w,c
  1342  0010EA  6ED9               	movwf	fsr2l,c
  1343  0010EC  6ADA               	clrf	fsr2h,c
  1344  0010EE  0E02               	movlw	2
  1345                           
  1346                           ; BSR set to: 15
  1347                           ;RTCC.c: 54: pdt->month = (RTCVALH >> 4)*10 + (RTCVALH & 0x0F);
  1348  0010F0  D817               	call	PL2	;call to abstracted procedure
  1349  0010F2  2AD9               	incf	fsr2l,f,c
  1350  0010F4  D82A               	call	PL8	;call to abstracted procedure
  1351  0010F6  D823               	call	PL4	;call to abstracted procedure
  1352                           
  1353                           ; BSR set to: 15
  1354                           ;RTCC.c: 55: pdt->hour = (RTCVALL >> 4)*10 + (RTCVALL & 0x0F);
  1355  0010F8  5001               	movf	GetDateTime@pdt,w,c
  1356  0010FA  6ED9               	movwf	fsr2l,c
  1357  0010FC  6ADA               	clrf	fsr2h,c
  1358  0010FE  0E04               	movlw	4
  1359                           
  1360                           ; BSR set to: 15
  1361                           ;RTCC.c: 56: pdt->weekday = RTCVALH;
  1362  001100  D80F               	call	PL2	;call to abstracted procedure
  1363  001102  0E03               	movlw	3
  1364  001104  26D9               	addwf	fsr2l,f,c
  1365  001106  CF99 FFDF          	movff	3993,indf2	;volatile
  1366                           
  1367                           ; BSR set to: 15
  1368                           ;RTCC.c: 57: pdt->second = (RTCVALL >> 4)*10 + (RTCVALL & 0x0F);
  1369  00110A  5001               	movf	GetDateTime@pdt,w,c
  1370  00110C  6ED9               	movwf	fsr2l,c
  1371  00110E  6ADA               	clrf	fsr2h,c
  1372  001110  0E06               	movlw	6
  1373                           
  1374                           ; BSR set to: 15
  1375                           ;RTCC.c: 58: pdt->minute = (RTCVALH >> 4)*10 + (RTCVALH & 0x0F);
  1376  001112  D806               	call	PL2	;call to abstracted procedure
  1377  001114  0E05               	movlw	5
  1378  001116  26D9               	addwf	fsr2l,f,c
  1379  001118  D818               	call	PL8	;call to abstracted procedure
  1380  00111A  D811               	call	PL4	;call to abstracted procedure
  1381                           
  1382                           ; BSR set to: 15
  1383                           ;RTCC.c: 59: RTCWREN = 0;;
  1384  00111C  9B3F               	bcf	63,5,b	;volatile
  1385                           
  1386                           ; BSR set to: 15
  1387  00111E  0012               	return		;funcret
  1388  001120                     __end_of_GetDateTime:
  1389                           	opt stack 0
  1390  001120                     PL2:
  1391                           	opt stack 29
  1392  001120  26D9               	addwf	fsr2l,f,c
  1393  001122  CF98 F002          	movff	3992,??_GetDateTime	;volatile
  1394  001126  0E0F               	movlw	15
  1395  001128  1602               	andwf	??_GetDateTime,f,c
  1396  00112A  3898               	swapf	3992,w,c	;volatile
  1397  00112C  0B0F               	andlw	15
  1398  00112E  0D0A               	mullw	10
  1399  001130  50F3               	movf	prodl,w,c
  1400  001132  2402               	addwf	??_GetDateTime,w,c
  1401  001134  6EDF               	movwf	indf2,c
  1402  001136  5001               	movf	GetDateTime@pdt,w,c
  1403  001138  6ED9               	movwf	fsr2l,c
  1404  00113A  6ADA               	clrf	fsr2h,c
  1405  00113C  0012               	return	
  1406  00113E                     __end_ofPL2:
  1407                           	opt stack 0
  1408  00113E                     PL4:
  1409                           	opt stack 29
  1410  00113E  0B0F               	andlw	15
  1411  001140  0D0A               	mullw	10
  1412  001142  50F3               	movf	prodl,w,c
  1413  001144  2402               	addwf	??_GetDateTime,w,c
  1414  001146  6EDF               	movwf	indf2,c
  1415  001148  0012               	return	
  1416  00114A                     __end_ofPL4:
  1417                           	opt stack 0
  1418  00114A                     PL8:
  1419                           	opt stack 29
  1420  00114A  CF99 F002          	movff	3993,??_GetDateTime	;volatile
  1421  00114E  0E0F               	movlw	15
  1422  001150  1602               	andwf	??_GetDateTime,f,c
  1423  001152  3899               	swapf	3993,w,c	;volatile
  1424  001154  0012               	return	
  1425  001156                     __end_ofPL8:
  1426                           	opt stack 0
  1427                           tosu	equ	0xFFF
  1428                           tosh	equ	0xFFE
  1429                           tosl	equ	0xFFD
  1430                           pclath	equ	0xFFA
  1431                           tblptru	equ	0xFF8
  1432                           tblptrh	equ	0xFF7
  1433                           tblptrl	equ	0xFF6
  1434                           tablat	equ	0xFF5
  1435                           prodl	equ	0xFF3
  1436                           postinc0	equ	0xFEE
  1437                           wreg	equ	0xFE8
  1438                           indf2	equ	0xFDF
  1439                           fsr2h	equ	0xFDA
  1440                           fsr2l	equ	0xFD9
  1441                           
  1442 ;; *************** function _unlock_RTCC *****************
  1443 ;; Defined at:
  1444 ;;		line 8 in file "RTCC.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;		None
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;		None
  1449 ;; Return value:  Size  Location     Type
  1450 ;;                  1    wreg      void 
  1451 ;; Registers used:
  1452 ;;		None
  1453 ;; Tracked objects:
  1454 ;;		On entry : 3F/F
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1462 ;;Total ram usage:        0 bytes
  1463 ;; Hardware stack levels used:    1
  1464 ;; This function calls:
  1465 ;;		Nothing
  1466 ;; This function is called by:
  1467 ;;		_SetupRTCC
  1468 ;;		_GetDateTime
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           	psect	text9
  1473  0012D6                     __ptext9:
  1474                           	opt stack 0
  1475  0012D6                     _unlock_RTCC:
  1476                           	opt stack 29
  1477                           
  1478                           ; BSR set to: 15
  1479                           
  1480                           ; BSR set to: 15
  1481                           ;incstack = 0
  1482  0012D6  010F               	movlb	15	;# 
  1483  0012D8  0E55               	movlw	85	;# 
  1484  0012DA  6EA7               	movwf	4007,c	;# 
  1485  0012DC  0EAA               	movlw	170	;# 
  1486  0012DE  6EA7               	movwf	4007,c	;# 
  1487  0012E0  8B3F               	bsf	3903,5,b	;# 
  1488  0012E2  0CAA               	retlw	170	;funcret
  1489  0012E4                     __end_of_unlock_RTCC:
  1490                           	opt stack 0
  1491                           tosu	equ	0xFFF
  1492                           tosh	equ	0xFFE
  1493                           tosl	equ	0xFFD
  1494                           pclath	equ	0xFFA
  1495                           tblptru	equ	0xFF8
  1496                           tblptrh	equ	0xFF7
  1497                           tblptrl	equ	0xFF6
  1498                           tablat	equ	0xFF5
  1499                           prodl	equ	0xFF3
  1500                           postinc0	equ	0xFEE
  1501                           wreg	equ	0xFE8
  1502                           indf2	equ	0xFDF
  1503                           fsr2h	equ	0xFDA
  1504                           fsr2l	equ	0xFD9
  1505                           
  1506 ;; *************** function _DisplayRefresh *****************
  1507 ;; Defined at:
  1508 ;;		line 79 in file "Display.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;		None
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;  dgt             1    1[COMRAM] unsigned char 
  1513 ;; Return value:  Size  Location     Type
  1514 ;;                  1    wreg      void 
  1515 ;; Registers used:
  1516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  1517 ;; Tracked objects:
  1518 ;;		On entry : 0/F
  1519 ;;		On exit  : 0/0
  1520 ;;		Unchanged: 0/0
  1521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1523 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1525 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1526 ;;Total ram usage:        1 bytes
  1527 ;; Hardware stack levels used:    1
  1528 ;; Hardware stack levels required when called:    1
  1529 ;; This function calls:
  1530 ;;		Absolute function
  1531 ;;		_DisplayController
  1532 ;;		_GetDigit1
  1533 ;;		_GetDigit2
  1534 ;;		_GetDigit3
  1535 ;;		_GetDigit4
  1536 ;; This function is called by:
  1537 ;;		_main
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           	psect	text10
  1542  000F12                     __ptext10:
  1543                           	opt stack 0
  1544  000F12                     _DisplayRefresh:
  1545                           	opt stack 29
  1546                           
  1547                           ;Display.c: 81: if (pPort)
  1548                           
  1549                           ;incstack = 0
  1550  000F12  501D               	movf	_pPort,w,c
  1551  000F14  101E               	iorwf	_pPort+1,w,c
  1552  000F16  E158               	bnz	l1024
  1553  000F18  0012               	return	
  1554  000F1A                     l974:
  1555                           
  1556                           ;Display.c: 87: if (DigitController)
  1557  000F1A  501F               	movf	_DigitController,w,c
  1558  000F1C  1020               	iorwf	_DigitController+1,w,c
  1559  000F1E  E00C               	bz	u79
  1560                           
  1561                           ;Display.c: 88: DigitController(0b00000001);
  1562  000F20  D801               	call	u78
  1563  000F22  D00A               	goto	u79
  1564  000F24                     u78:
  1565  000F24  0005               	push	
  1566  000F26  6EFA               	movwf	pclath,c
  1567  000F28  501F               	movf	_DigitController,w,c
  1568  000F2A  6EFD               	movwf	tosl,c
  1569  000F2C  5020               	movf	_DigitController+1,w,c
  1570  000F2E  6EFE               	movwf	tosh,c
  1571  000F30  50F8               	movf	tblptru,w,c
  1572  000F32  6EFF               	movwf	tosu,c
  1573  000F34  50FA               	movf	pclath,w,c
  1574  000F36  0C01               	retlw	1	;indir
  1575  000F38                     u79:
  1576                           
  1577                           ;Display.c: 89: dgt = GetDigit4();
  1578  000F38  EC80  F009         	call	_GetDigit4
  1579  000F3C  6E02               	movwf	DisplayRefresh@dgt,c
  1580                           
  1581                           ;Display.c: 90: if (dp & 0b00000001)
  1582  000F3E  A011               	btfss	_dp,0,c
  1583  000F40  D002               	goto	l984
  1584  000F42                     u80:
  1585                           
  1586                           ;Display.c: 91: dgt |= 0b10000000;
  1587  000F42  8E02               	bsf	DisplayRefresh@dgt,7,c
  1588  000F44  D049               	goto	l1026
  1589  000F46                     l984:
  1590                           
  1591                           ;Display.c: 92: else
  1592                           ;Display.c: 93: dgt &= 0b01111111;
  1593  000F46  9E02               	bcf	DisplayRefresh@dgt,7,c
  1594  000F48  D047               	goto	l1026
  1595  000F4A                     l986:
  1596                           
  1597                           ;Display.c: 96: if (DigitController)
  1598  000F4A  501F               	movf	_DigitController,w,c
  1599  000F4C  1020               	iorwf	_DigitController+1,w,c
  1600  000F4E  E00C               	bz	u109
  1601                           
  1602                           ;Display.c: 97: DigitController(0b0000010);
  1603  000F50  D801               	call	u108
  1604  000F52  D00A               	goto	u109
  1605  000F54                     u108:
  1606  000F54  0005               	push	
  1607  000F56  6EFA               	movwf	pclath,c
  1608  000F58  501F               	movf	_DigitController,w,c
  1609  000F5A  6EFD               	movwf	tosl,c
  1610  000F5C  5020               	movf	_DigitController+1,w,c
  1611  000F5E  6EFE               	movwf	tosh,c
  1612  000F60  50F8               	movf	tblptru,w,c
  1613  000F62  6EFF               	movwf	tosu,c
  1614  000F64  50FA               	movf	pclath,w,c
  1615  000F66  0C02               	retlw	2	;indir
  1616  000F68                     u109:
  1617                           
  1618                           ;Display.c: 98: dgt = GetDigit3();
  1619  000F68  EC82  F009         	call	_GetDigit3
  1620  000F6C  6E02               	movwf	DisplayRefresh@dgt,c
  1621                           
  1622                           ;Display.c: 99: if (dp & 0b00000010)
  1623  000F6E  A211               	btfss	_dp,1,c
  1624  000F70  D7EA               	goto	l984
  1625  000F72  D7E7               	goto	u80
  1626  000F74                     l998:
  1627                           
  1628                           ;Display.c: 105: if (DigitController)
  1629  000F74  501F               	movf	_DigitController,w,c
  1630  000F76  1020               	iorwf	_DigitController+1,w,c
  1631  000F78  E00C               	bz	u139
  1632                           
  1633                           ;Display.c: 106: DigitController(0b0000100);
  1634  000F7A  D801               	call	u138
  1635  000F7C  D00A               	goto	u139
  1636  000F7E                     u138:
  1637  000F7E  0005               	push	
  1638  000F80  6EFA               	movwf	pclath,c
  1639  000F82  501F               	movf	_DigitController,w,c
  1640  000F84  6EFD               	movwf	tosl,c
  1641  000F86  5020               	movf	_DigitController+1,w,c
  1642  000F88  6EFE               	movwf	tosh,c
  1643  000F8A  50F8               	movf	tblptru,w,c
  1644  000F8C  6EFF               	movwf	tosu,c
  1645  000F8E  50FA               	movf	pclath,w,c
  1646  000F90  0C04               	retlw	4	;indir
  1647  000F92                     u139:
  1648                           
  1649                           ;Display.c: 107: dgt = GetDigit2();
  1650  000F92  EC84  F009         	call	_GetDigit2
  1651  000F96  6E02               	movwf	DisplayRefresh@dgt,c
  1652                           
  1653                           ;Display.c: 108: if (dp & 0b00000100)
  1654  000F98  A411               	btfss	_dp,2,c
  1655  000F9A  D7D5               	goto	l984
  1656  000F9C  D7D2               	goto	u80
  1657  000F9E                     l1010:
  1658                           
  1659                           ;Display.c: 114: if (DigitController)
  1660  000F9E  501F               	movf	_DigitController,w,c
  1661  000FA0  1020               	iorwf	_DigitController+1,w,c
  1662  000FA2  E00C               	bz	u169
  1663                           
  1664                           ;Display.c: 115: DigitController(0b00001000);
  1665  000FA4  D801               	call	u168
  1666  000FA6  D00A               	goto	u169
  1667  000FA8                     u168:
  1668  000FA8  0005               	push	
  1669  000FAA  6EFA               	movwf	pclath,c
  1670  000FAC  501F               	movf	_DigitController,w,c
  1671  000FAE  6EFD               	movwf	tosl,c
  1672  000FB0  5020               	movf	_DigitController+1,w,c
  1673  000FB2  6EFE               	movwf	tosh,c
  1674  000FB4  50F8               	movf	tblptru,w,c
  1675  000FB6  6EFF               	movwf	tosu,c
  1676  000FB8  50FA               	movf	pclath,w,c
  1677  000FBA  0C08               	retlw	8	;indir
  1678  000FBC                     u169:
  1679                           
  1680                           ;Display.c: 116: dgt = GetDigit1();
  1681  000FBC  EC86  F009         	call	_GetDigit1
  1682  000FC0  6E02               	movwf	DisplayRefresh@dgt,c
  1683                           
  1684                           ;Display.c: 117: if (dp & 0b00001000)
  1685  000FC2  A611               	btfss	_dp,3,c
  1686  000FC4  D7C0               	goto	l984
  1687  000FC6  D7BD               	goto	u80
  1688  000FC8                     l1024:
  1689  000FC8  5010               	movf	_digit,w,c
  1690                           
  1691                           ; Switch size 1, requested type "space"
  1692                           ; Number of cases is 4, Range of values is 0 to 3
  1693                           ; switch strategies available:
  1694                           ; Name         Instructions Cycles
  1695                           ; simple_byte           13     7 (average)
  1696                           ;	Chosen strategy is simple_byte
  1697  000FCA  E0A7               	bz	l974
  1698  000FCC  0A01               	xorlw	1	; case 1
  1699  000FCE  E0BD               	bz	l986
  1700  000FD0  0A03               	xorlw	3	; case 2
  1701  000FD2  E0D0               	bz	l998
  1702  000FD4  0A01               	xorlw	1	; case 3
  1703  000FD6  E0E3               	bz	l1010
  1704  000FD8                     l1026:
  1705                           
  1706                           ;Display.c: 125: *pPort = dgt;
  1707  000FD8  C01D  FFD9         	movff	_pPort,fsr2l
  1708  000FDC  C01E  FFDA         	movff	_pPort+1,fsr2h
  1709  000FE0  C002  FFDF         	movff	DisplayRefresh@dgt,indf2
  1710                           
  1711                           ;Display.c: 126: digit ++;
  1712  000FE4  2A10               	incf	_digit,f,c
  1713                           
  1714                           ;Display.c: 127: if (digit > 3)
  1715  000FE6  0E03               	movlw	3
  1716  000FE8  6410               	cpfsgt	_digit,c
  1717  000FEA  0C03               	retlw	3
  1718                           
  1719                           ;Display.c: 128: digit = 0;
  1720  000FEC  6A10               	clrf	_digit,c
  1721  000FEE  0012               	return		;funcret
  1722  000FF0                     __end_of_DisplayRefresh:
  1723                           	opt stack 0
  1724                           tosu	equ	0xFFF
  1725                           tosh	equ	0xFFE
  1726                           tosl	equ	0xFFD
  1727                           pclath	equ	0xFFA
  1728                           tblptru	equ	0xFF8
  1729                           tblptrh	equ	0xFF7
  1730                           tblptrl	equ	0xFF6
  1731                           tablat	equ	0xFF5
  1732                           prodl	equ	0xFF3
  1733                           postinc0	equ	0xFEE
  1734                           wreg	equ	0xFE8
  1735                           indf2	equ	0xFDF
  1736                           fsr2h	equ	0xFDA
  1737                           fsr2l	equ	0xFD9
  1738                           
  1739 ;; *************** function _GetDigit4 *****************
  1740 ;; Defined at:
  1741 ;;		line 314 in file "Display.c"
  1742 ;; Parameters:    Size  Location     Type
  1743 ;;		None
  1744 ;; Auto vars:     Size  Location     Type
  1745 ;;		None
  1746 ;; Return value:  Size  Location     Type
  1747 ;;                  1    wreg      unsigned char 
  1748 ;; Registers used:
  1749 ;;		wreg, status,2
  1750 ;; Tracked objects:
  1751 ;;		On entry : 0/F
  1752 ;;		On exit  : 0/0
  1753 ;;		Unchanged: 0/0
  1754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1759 ;;Total ram usage:        0 bytes
  1760 ;; Hardware stack levels used:    1
  1761 ;; This function calls:
  1762 ;;		Nothing
  1763 ;; This function is called by:
  1764 ;;		_DisplayRefresh
  1765 ;; This function uses a non-reentrant model
  1766 ;;
  1767                           
  1768                           	psect	text11
  1769  001300                     __ptext11:
  1770                           	opt stack 0
  1771  001300                     _GetDigit4:
  1772                           	opt stack 29
  1773                           
  1774                           ;Display.c: 316: return digit4;
  1775                           
  1776                           ;incstack = 0
  1777  001300  5012               	movf	_digit4,w,c
  1778  001302  0012               	return		;funcret
  1779  001304                     __end_of_GetDigit4:
  1780                           	opt stack 0
  1781                           tosu	equ	0xFFF
  1782                           tosh	equ	0xFFE
  1783                           tosl	equ	0xFFD
  1784                           pclath	equ	0xFFA
  1785                           tblptru	equ	0xFF8
  1786                           tblptrh	equ	0xFF7
  1787                           tblptrl	equ	0xFF6
  1788                           tablat	equ	0xFF5
  1789                           prodl	equ	0xFF3
  1790                           postinc0	equ	0xFEE
  1791                           wreg	equ	0xFE8
  1792                           indf2	equ	0xFDF
  1793                           fsr2h	equ	0xFDA
  1794                           fsr2l	equ	0xFD9
  1795                           
  1796 ;; *************** function _GetDigit3 *****************
  1797 ;; Defined at:
  1798 ;;		line 310 in file "Display.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;		None
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;		None
  1803 ;; Return value:  Size  Location     Type
  1804 ;;                  1    wreg      unsigned char 
  1805 ;; Registers used:
  1806 ;;		wreg, status,2
  1807 ;; Tracked objects:
  1808 ;;		On entry : 0/F
  1809 ;;		On exit  : 0/0
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1816 ;;Total ram usage:        0 bytes
  1817 ;; Hardware stack levels used:    1
  1818 ;; This function calls:
  1819 ;;		Nothing
  1820 ;; This function is called by:
  1821 ;;		_DisplayRefresh
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           	psect	text12
  1826  001304                     __ptext12:
  1827                           	opt stack 0
  1828  001304                     _GetDigit3:
  1829                           	opt stack 29
  1830                           
  1831                           ;Display.c: 312: return digit3;
  1832                           
  1833                           ;incstack = 0
  1834  001304  5013               	movf	_digit3,w,c
  1835  001306  0012               	return		;funcret
  1836  001308                     __end_of_GetDigit3:
  1837                           	opt stack 0
  1838                           tosu	equ	0xFFF
  1839                           tosh	equ	0xFFE
  1840                           tosl	equ	0xFFD
  1841                           pclath	equ	0xFFA
  1842                           tblptru	equ	0xFF8
  1843                           tblptrh	equ	0xFF7
  1844                           tblptrl	equ	0xFF6
  1845                           tablat	equ	0xFF5
  1846                           prodl	equ	0xFF3
  1847                           postinc0	equ	0xFEE
  1848                           wreg	equ	0xFE8
  1849                           indf2	equ	0xFDF
  1850                           fsr2h	equ	0xFDA
  1851                           fsr2l	equ	0xFD9
  1852                           
  1853 ;; *************** function _GetDigit2 *****************
  1854 ;; Defined at:
  1855 ;;		line 306 in file "Display.c"
  1856 ;; Parameters:    Size  Location     Type
  1857 ;;		None
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;		None
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  1    wreg      unsigned char 
  1862 ;; Registers used:
  1863 ;;		wreg, status,2
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/F
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1873 ;;Total ram usage:        0 bytes
  1874 ;; Hardware stack levels used:    1
  1875 ;; This function calls:
  1876 ;;		Nothing
  1877 ;; This function is called by:
  1878 ;;		_DisplayRefresh
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           	psect	text13
  1883  001308                     __ptext13:
  1884                           	opt stack 0
  1885  001308                     _GetDigit2:
  1886                           	opt stack 29
  1887                           
  1888                           ;Display.c: 308: return digit2;
  1889                           
  1890                           ;incstack = 0
  1891  001308  5014               	movf	_digit2,w,c
  1892  00130A  0012               	return		;funcret
  1893  00130C                     __end_of_GetDigit2:
  1894                           	opt stack 0
  1895                           tosu	equ	0xFFF
  1896                           tosh	equ	0xFFE
  1897                           tosl	equ	0xFFD
  1898                           pclath	equ	0xFFA
  1899                           tblptru	equ	0xFF8
  1900                           tblptrh	equ	0xFF7
  1901                           tblptrl	equ	0xFF6
  1902                           tablat	equ	0xFF5
  1903                           prodl	equ	0xFF3
  1904                           postinc0	equ	0xFEE
  1905                           wreg	equ	0xFE8
  1906                           indf2	equ	0xFDF
  1907                           fsr2h	equ	0xFDA
  1908                           fsr2l	equ	0xFD9
  1909                           
  1910 ;; *************** function _GetDigit1 *****************
  1911 ;; Defined at:
  1912 ;;		line 302 in file "Display.c"
  1913 ;; Parameters:    Size  Location     Type
  1914 ;;		None
  1915 ;; Auto vars:     Size  Location     Type
  1916 ;;		None
  1917 ;; Return value:  Size  Location     Type
  1918 ;;                  1    wreg      unsigned char 
  1919 ;; Registers used:
  1920 ;;		wreg, status,2
  1921 ;; Tracked objects:
  1922 ;;		On entry : 0/F
  1923 ;;		On exit  : 0/0
  1924 ;;		Unchanged: 0/0
  1925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1930 ;;Total ram usage:        0 bytes
  1931 ;; Hardware stack levels used:    1
  1932 ;; This function calls:
  1933 ;;		Nothing
  1934 ;; This function is called by:
  1935 ;;		_DisplayRefresh
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           
  1939                           	psect	text14
  1940  00130C                     __ptext14:
  1941                           	opt stack 0
  1942  00130C                     _GetDigit1:
  1943                           	opt stack 29
  1944                           
  1945                           ;Display.c: 304: return digit1;
  1946                           
  1947                           ;incstack = 0
  1948  00130C  5015               	movf	_digit1,w,c
  1949  00130E  0012               	return		;funcret
  1950  001310                     __end_of_GetDigit1:
  1951                           	opt stack 0
  1952                           tosu	equ	0xFFF
  1953                           tosh	equ	0xFFE
  1954                           tosl	equ	0xFFD
  1955                           pclath	equ	0xFFA
  1956                           tblptru	equ	0xFF8
  1957                           tblptrh	equ	0xFF7
  1958                           tblptrl	equ	0xFF6
  1959                           tablat	equ	0xFF5
  1960                           prodl	equ	0xFF3
  1961                           postinc0	equ	0xFEE
  1962                           wreg	equ	0xFE8
  1963                           indf2	equ	0xFDF
  1964                           fsr2h	equ	0xFDA
  1965                           fsr2l	equ	0xFD9
  1966                           
  1967 ;; *************** function _DisplayController *****************
  1968 ;; Defined at:
  1969 ;;		line 109 in file "main.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;  digits          1    wreg     unsigned char 
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;  digits          1    0[COMRAM] unsigned char 
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  1    wreg      void 
  1976 ;; Registers used:
  1977 ;;		wreg
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/F
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1984 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1986 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1987 ;;Total ram usage:        1 bytes
  1988 ;; Hardware stack levels used:    1
  1989 ;; This function calls:
  1990 ;;		Nothing
  1991 ;; This function is called by:
  1992 ;;		_main
  1993 ;;		_DisplayRefresh
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997                           	psect	text15
  1998  0011D8                     __ptext15:
  1999                           	opt stack 0
  2000  0011D8                     _DisplayController:
  2001                           	opt stack 29
  2002                           
  2003                           ;incstack = 0
  2004                           ;DisplayController@digits stored from wreg
  2005  0011D8  6E01               	movwf	DisplayController@digits,c
  2006                           
  2007                           ;main.c: 111: if (digits & 0x01)
  2008  0011DA  A001               	btfss	DisplayController@digits,0,c
  2009  0011DC  D002               	goto	l238
  2010                           
  2011                           ;main.c: 112: PSTR1CONbits.STRA = 1;
  2012  0011DE  80BF               	bsf	4031,0,c	;volatile
  2013  0011E0  D001               	goto	l952
  2014  0011E2                     l238:
  2015                           
  2016                           ;main.c: 113: else
  2017                           ;main.c: 114: PSTR1CONbits.STRA = 0;
  2018  0011E2  90BF               	bcf	4031,0,c	;volatile
  2019  0011E4                     l952:
  2020                           
  2021                           ;main.c: 115: if (digits & 0x02)
  2022  0011E4  A201               	btfss	DisplayController@digits,1,c
  2023  0011E6  D002               	goto	l240
  2024                           
  2025                           ;main.c: 116: PSTR1CONbits.STRB = 1;
  2026  0011E8  82BF               	bsf	4031,1,c	;volatile
  2027  0011EA  D001               	goto	l956
  2028  0011EC                     l240:
  2029                           
  2030                           ;main.c: 117: else
  2031                           ;main.c: 118: PSTR1CONbits.STRB = 0;
  2032  0011EC  92BF               	bcf	4031,1,c	;volatile
  2033  0011EE                     l956:
  2034                           
  2035                           ;main.c: 119: if (digits & 0x04)
  2036  0011EE  A401               	btfss	DisplayController@digits,2,c
  2037  0011F0  D002               	goto	l242
  2038                           
  2039                           ;main.c: 120: PSTR1CONbits.STRC = 1;
  2040  0011F2  84BF               	bsf	4031,2,c	;volatile
  2041  0011F4  D001               	goto	l960
  2042  0011F6                     l242:
  2043                           
  2044                           ;main.c: 121: else
  2045                           ;main.c: 122: PSTR1CONbits.STRC = 0;
  2046  0011F6  94BF               	bcf	4031,2,c	;volatile
  2047  0011F8                     l960:
  2048                           
  2049                           ;main.c: 123: if (digits & 0x08)
  2050  0011F8  A601               	btfss	DisplayController@digits,3,c
  2051  0011FA  D002               	goto	l244
  2052                           
  2053                           ;main.c: 124: PSTR1CONbits.STRD = 1;
  2054  0011FC  86BF               	bsf	4031,3,c	;volatile
  2055  0011FE  0012               	return	
  2056  001200                     l244:
  2057                           
  2058                           ;main.c: 125: else
  2059                           ;main.c: 126: PSTR1CONbits.STRD = 0;
  2060  001200  96BF               	bcf	4031,3,c	;volatile
  2061  001202  0012               	return		;funcret
  2062  001204                     __end_of_DisplayController:
  2063                           	opt stack 0
  2064                           tosu	equ	0xFFF
  2065                           tosh	equ	0xFFE
  2066                           tosl	equ	0xFFD
  2067                           pclath	equ	0xFFA
  2068                           tblptru	equ	0xFF8
  2069                           tblptrh	equ	0xFF7
  2070                           tblptrl	equ	0xFF6
  2071                           tablat	equ	0xFF5
  2072                           prodl	equ	0xFF3
  2073                           postinc0	equ	0xFEE
  2074                           wreg	equ	0xFE8
  2075                           indf2	equ	0xFDF
  2076                           fsr2h	equ	0xFDA
  2077                           fsr2l	equ	0xFD9
  2078                           
  2079 ;; *************** function _DPOn *****************
  2080 ;; Defined at:
  2081 ;;		line 132 in file "Display.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;  dp_n            1    wreg     unsigned char 
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;  dp_n            1    0[COMRAM] unsigned char 
  2086 ;; Return value:  Size  Location     Type
  2087 ;;                  1    wreg      void 
  2088 ;; Registers used:
  2089 ;;		wreg, status,2, status,0
  2090 ;; Tracked objects:
  2091 ;;		On entry : 3F/F
  2092 ;;		On exit  : 0/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2096 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2098 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2099 ;;Total ram usage:        1 bytes
  2100 ;; Hardware stack levels used:    1
  2101 ;; This function calls:
  2102 ;;		Nothing
  2103 ;; This function is called by:
  2104 ;;		_main
  2105 ;; This function uses a non-reentrant model
  2106 ;;
  2107                           
  2108                           	psect	text16
  2109  001204                     __ptext16:
  2110                           	opt stack 0
  2111  001204                     _DPOn:
  2112                           	opt stack 30
  2113                           
  2114                           ;incstack = 0
  2115                           ;DPOn@dp_n stored from wreg
  2116  001204  6E01               	movwf	DPOn@dp_n,c
  2117                           
  2118                           ;Display.c: 134: switch (dp_n)
  2119  001206  D008               	goto	l1046
  2120  001208                     l1036:
  2121                           
  2122                           ;Display.c: 137: dp |= 0b00000001;
  2123  001208  8011               	bsf	_dp,0,c
  2124                           
  2125                           ;Display.c: 138: break;
  2126  00120A  0012               	return	
  2127  00120C                     l1038:
  2128                           
  2129                           ;Display.c: 140: dp |= 0b00000010;
  2130  00120C  8211               	bsf	_dp,1,c
  2131                           
  2132                           ;Display.c: 141: break;
  2133  00120E  0012               	return	
  2134  001210                     l1040:
  2135                           
  2136                           ;Display.c: 143: dp |= 0b00000100;
  2137  001210  8411               	bsf	_dp,2,c
  2138                           
  2139                           ;Display.c: 144: break;
  2140  001212  0012               	return	
  2141  001214                     l1042:
  2142                           
  2143                           ;Display.c: 146: dp |= 0b00001000;
  2144  001214  8611               	bsf	_dp,3,c
  2145                           
  2146                           ;Display.c: 147: break;
  2147  001216  0012               	return	
  2148  001218                     l1046:
  2149  001218  5001               	movf	DPOn@dp_n,w,c
  2150                           
  2151                           ; Switch size 1, requested type "space"
  2152                           ; Number of cases is 4, Range of values is 1 to 4
  2153                           ; switch strategies available:
  2154                           ; Name         Instructions Cycles
  2155                           ; simple_byte           13     7 (average)
  2156                           ;	Chosen strategy is simple_byte
  2157  00121A  0A01               	xorlw	1	; case 1
  2158  00121C  E0F5               	bz	l1036
  2159  00121E  0A03               	xorlw	3	; case 2
  2160  001220  E0F5               	bz	l1038
  2161  001222  0A01               	xorlw	1	; case 3
  2162  001224  E0F5               	bz	l1040
  2163  001226  0A07               	xorlw	7	; case 4
  2164  001228  E0F5               	bz	l1042
  2165  00122A  0012               	return		;funcret
  2166  00122C                     __end_of_DPOn:
  2167                           	opt stack 0
  2168                           tosu	equ	0xFFF
  2169                           tosh	equ	0xFFE
  2170                           tosl	equ	0xFFD
  2171                           pclath	equ	0xFFA
  2172                           tblptru	equ	0xFF8
  2173                           tblptrh	equ	0xFF7
  2174                           tblptrl	equ	0xFF6
  2175                           tablat	equ	0xFF5
  2176                           prodl	equ	0xFF3
  2177                           postinc0	equ	0xFEE
  2178                           wreg	equ	0xFE8
  2179                           indf2	equ	0xFDF
  2180                           fsr2h	equ	0xFDA
  2181                           fsr2l	equ	0xFD9
  2182                           
  2183 ;; *************** function _DPOff *****************
  2184 ;; Defined at:
  2185 ;;		line 153 in file "Display.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;  dp_n            1    wreg     unsigned char 
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;  dp_n            1    0[COMRAM] unsigned char 
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  1    wreg      void 
  2192 ;; Registers used:
  2193 ;;		wreg, status,2, status,0
  2194 ;; Tracked objects:
  2195 ;;		On entry : 3F/F
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2200 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2202 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2203 ;;Total ram usage:        1 bytes
  2204 ;; Hardware stack levels used:    1
  2205 ;; This function calls:
  2206 ;;		Nothing
  2207 ;; This function is called by:
  2208 ;;		_main
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           	psect	text17
  2213  00122C                     __ptext17:
  2214                           	opt stack 0
  2215  00122C                     _DPOff:
  2216                           	opt stack 30
  2217                           
  2218                           ;incstack = 0
  2219                           ;DPOff@dp_n stored from wreg
  2220  00122C  6E01               	movwf	DPOff@dp_n,c
  2221                           
  2222                           ;Display.c: 155: switch (dp_n)
  2223  00122E  D008               	goto	l1060
  2224  001230                     l1050:
  2225                           
  2226                           ;Display.c: 158: dp &= 0b11111110;
  2227  001230  9011               	bcf	_dp,0,c
  2228                           
  2229                           ;Display.c: 159: break;
  2230  001232  0012               	return	
  2231  001234                     l1052:
  2232                           
  2233                           ;Display.c: 161: dp &= 0b11111101;
  2234  001234  9211               	bcf	_dp,1,c
  2235                           
  2236                           ;Display.c: 162: break;
  2237  001236  0012               	return	
  2238  001238                     l1054:
  2239                           
  2240                           ;Display.c: 164: dp &= 0b11111011;
  2241  001238  9411               	bcf	_dp,2,c
  2242                           
  2243                           ;Display.c: 165: break;
  2244  00123A  0012               	return	
  2245  00123C                     l1056:
  2246                           
  2247                           ;Display.c: 167: dp &= 0b11110111;
  2248  00123C  9611               	bcf	_dp,3,c
  2249                           
  2250                           ;Display.c: 168: break;
  2251  00123E  0012               	return	
  2252  001240                     l1060:
  2253  001240  5001               	movf	DPOff@dp_n,w,c
  2254                           
  2255                           ; Switch size 1, requested type "space"
  2256                           ; Number of cases is 4, Range of values is 1 to 4
  2257                           ; switch strategies available:
  2258                           ; Name         Instructions Cycles
  2259                           ; simple_byte           13     7 (average)
  2260                           ;	Chosen strategy is simple_byte
  2261  001242  0A01               	xorlw	1	; case 1
  2262  001244  E0F5               	bz	l1050
  2263  001246  0A03               	xorlw	3	; case 2
  2264  001248  E0F5               	bz	l1052
  2265  00124A  0A01               	xorlw	1	; case 3
  2266  00124C  E0F5               	bz	l1054
  2267  00124E  0A07               	xorlw	7	; case 4
  2268  001250  E0F5               	bz	l1056
  2269  001252  0012               	return		;funcret
  2270  001254                     __end_of_DPOff:
  2271                           	opt stack 0
  2272                           tosu	equ	0xFFF
  2273                           tosh	equ	0xFFE
  2274                           tosl	equ	0xFFD
  2275                           pclath	equ	0xFFA
  2276                           tblptru	equ	0xFF8
  2277                           tblptrh	equ	0xFF7
  2278                           tblptrl	equ	0xFF6
  2279                           tablat	equ	0xFF5
  2280                           prodl	equ	0xFF3
  2281                           postinc0	equ	0xFEE
  2282                           wreg	equ	0xFE8
  2283                           indf2	equ	0xFDF
  2284                           fsr2h	equ	0xFDA
  2285                           fsr2l	equ	0xFD9
  2286                           tosu	equ	0xFFF
  2287                           tosh	equ	0xFFE
  2288                           tosl	equ	0xFFD
  2289                           pclath	equ	0xFFA
  2290                           tblptru	equ	0xFF8
  2291                           tblptrh	equ	0xFF7
  2292                           tblptrl	equ	0xFF6
  2293                           tablat	equ	0xFF5
  2294                           prodl	equ	0xFF3
  2295                           postinc0	equ	0xFEE
  2296                           wreg	equ	0xFE8
  2297                           indf2	equ	0xFDF
  2298                           fsr2h	equ	0xFDA
  2299                           fsr2l	equ	0xFD9
  2300                           
  2301                           	psect	text18
  2302  000000                     __ptext18:
  2303                           	opt stack 0
  2304                           tosu	equ	0xFFF
  2305                           tosh	equ	0xFFE
  2306                           tosl	equ	0xFFD
  2307                           pclath	equ	0xFFA
  2308                           tblptru	equ	0xFF8
  2309                           tblptrh	equ	0xFF7
  2310                           tblptrl	equ	0xFF6
  2311                           tablat	equ	0xFF5
  2312                           prodl	equ	0xFF3
  2313                           postinc0	equ	0xFEE
  2314                           wreg	equ	0xFE8
  2315                           indf2	equ	0xFDF
  2316                           fsr2h	equ	0xFDA
  2317                           fsr2l	equ	0xFD9
  2318                           
  2319                           	psect	rparam
  2320  0000                     tosu	equ	0xFFF
  2321                           tosh	equ	0xFFE
  2322                           tosl	equ	0xFFD
  2323                           pclath	equ	0xFFA
  2324                           tblptru	equ	0xFF8
  2325                           tblptrh	equ	0xFF7
  2326                           tblptrl	equ	0xFF6
  2327                           tablat	equ	0xFF5
  2328                           prodl	equ	0xFF3
  2329                           postinc0	equ	0xFEE
  2330                           wreg	equ	0xFE8
  2331                           indf2	equ	0xFDF
  2332                           fsr2h	equ	0xFDA
  2333                           fsr2l	equ	0xFD9
  2334                           tosu	equ	0xFFF
  2335                           tosh	equ	0xFFE
  2336                           tosl	equ	0xFFD
  2337                           pclath	equ	0xFFA
  2338                           tblptru	equ	0xFF8
  2339                           tblptrh	equ	0xFF7
  2340                           tblptrl	equ	0xFF6
  2341                           tablat	equ	0xFF5
  2342                           prodl	equ	0xFF3
  2343                           postinc0	equ	0xFEE
  2344                           wreg	equ	0xFE8
  2345                           indf2	equ	0xFDF
  2346                           fsr2h	equ	0xFDA
  2347                           fsr2l	equ	0xFD9


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         13
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     15      32
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    BrightDigit4	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    BrightDigit3	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    BrightDigit2	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GetDateTime@pdt	PTR struct . size(1) Largest target is 7
		 -> dt(COMRAM[7]), 

    BrightDigit1	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    SetCouples@pDecode	PTR const unsigned char  size(1) Largest target is 16
		 -> Decode(CODE[16]), 

    SetupDigitController@controller	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DisplayController(), 

    DigitController	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DisplayController(), Absolute function(), 

    SetupOutputPort@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR_2[1]), 

    pPort	PTR unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR_2[1]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_SetCouples
    _DisplayRefresh->_DisplayController

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    1092
                                              8 COMRAM     7     7      0
                              _DPOff
                               _DPOn
                     _DisplayRefresh
                        _GetDateTime
                         _SetCouples
                             _SetPwm
               _SetupDigitController
                        _SetupIOPins
                    _SetupOutputPort
                           _SetupPWM
                          _SetupRTCC
 ---------------------------------------------------------------------------------
 (1) _SetupRTCC                                            0     0      0       0
                        _unlock_RTCC
 ---------------------------------------------------------------------------------
 (1) _SetupPWM                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetupOutputPort                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SetupIOPins                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetupDigitController                                 2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SetPwm                                               1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SetCouples                                           8     7      1     397
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (1) _GetDateTime                                          3     2      1     230
                                              0 COMRAM     2     1      1
                        _unlock_RTCC
 ---------------------------------------------------------------------------------
 (2) _unlock_RTCC                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DisplayRefresh                                       1     1      0      75
                                              1 COMRAM     1     1      0
                   Absolute function *
                  _DisplayController *
                          _GetDigit1
                          _GetDigit2
                          _GetDigit3
                          _GetDigit4
 ---------------------------------------------------------------------------------
 (2) _GetDigit4                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GetDigit3                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GetDigit2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GetDigit1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DisplayController                                    1     1      0      60
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DPOn                                                 1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DPOff                                                1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DPOff
   _DPOn
   _DisplayRefresh
     Absolute function(Fake) *
     _DisplayController *
     _GetDigit1 *
     _GetDigit2 *
     _GetDigit3 *
     _GetDigit4 *
   _GetDateTime
     _unlock_RTCC
   _SetCouples
   _SetPwm
   _SetupDigitController
   _SetupIOPins
   _SetupOutputPort
   _SetupPWM
   _SetupRTCC
     _unlock_RTCC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      F      20       1       33.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      20       6        0.0%
DATA                 0      0      20       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Sat Jan 27 18:05:11 2018

           __end_of_GetDateTime 1120                              PL2 1120                              PL4 113E  
                            PL6 11CA                              PL8 114A                              u80 0F42  
                            u78 0F24                              u79 0F38                              _dp 0011  
                            _dt 0016                    __CFG_CP0$OFF 000000                             l230 12B4  
                           l240 11EC                             l242 11F6                             l244 1200  
                           l228 12AA                             l238 11E2                             l256 106A  
                           l257 106C                             l258 1074                             l960 11F8  
                           l952 11E4                             l956 11EE                             l974 0F1A  
                           l984 0F46                             l986 0F4A                             l998 0F74  
                           u108 0F54                             u109 0F68                             u138 0F7E  
                           u139 0F92                             u420 104E                             u430 105C  
                           _PR2 000FCB                             u168 0FA8                             u169 0FBC  
                           u460 10AC                             u477 10BA                     _unlock_RTCC 12D6  
                           tosl 000FFD                             wreg 000FE8                   SetCouples@lx1 0005  
                 SetCouples@rx1 0006                            l1010 0F9E                            l1040 1210  
                          l1024 0FC8                            l1050 1230                            l1042 1214  
                          l1026 0FD8                            l1122 12AC                            l1052 1234  
                          l1060 1240                            l1036 1208                            l1054 1238  
                          l1038 120C                            l1046 1218                            l1126 12B6  
                          l1056 123C                            l1250 1184                            l1242 116C  
                          l1322 1036                            l1260 119E                            l1252 1188  
                          l1332 1062                            l1324 103C                            l1270 11BA  
                          l1246 1172                            l1318 1028                            l1264 11A4  
                          l1256 1196                            l1338 1076                            l1354 10B0  
                          l1268 11B6      __size_of_DisplayController 002C                            _DPOn 1204  
                          _main 0FF0                            fsr2h 000FDA                            indf2 000FDF  
                          fsr2l 000FD9                            prodl 000FF3                            start 0000  
                 __CFG_IESO$OFF 000000                  SetCouples@lx10 0003                  SetCouples@rx10 0004  
                SetCouples@left 0007                    ___param_bank 000000                           EECON2 000FA7  
                         ?_DPOn 0001                           RTCCFG 000F3F                           ?_main 0001  
                         _T1CON 000FCD                           _T2CON 000FCA                           _DPOff 122C  
       __end_of_SetupOutputPort 12EE                           _PORTB 000F81                           _PORTC 000F82  
                         _TRISB 000F93                           _TRISC 000F94                  __CFG_FCMEN$OFF 000000  
               _DigitController 001F                           _digit 0010                           _pPort 001D  
                __CFG_T1DIG$OFF 000000                           pclath 000FFA                           tablat 000FF5  
                         status 000FD8                     _GetDateTime 10C4                    __end_of_DPOn 122C  
               SetCouples@right 0001         __CFG_DSWDTOSC$INTOSCREF 000000                 __initialization 12C0  
                  __end_of_main 10C4               DisplayRefresh@dgt 0002                          ??_DPOn 0001  
                    SetPwm@duty 0001              __size_of_GetDigit1 0004              __size_of_GetDigit2 0004  
            __size_of_GetDigit3 0004              __size_of_GetDigit4 0004            _SetupDigitController 12EE  
                        ??_main 0009                   __activetblptr 000002                          ?_DPOff 0001  
              __end_of_SetupPWM 12A0                      _SetCouples 1156                          _CCPR1L 000FBB  
                        _ANCON1 000F49                  __CFG_WDTEN$OFF 000000                          _OSCCON 000FD3  
                        _RTCCFG 000F3F                          _RPOR15 000ED5                          _RPOR16 000ED6  
                        _RPOR17 000ED7                          _RPOR18 000ED8                  __CFG_WPCFG$OFF 000000  
                        _Decode 0F01                  __CFG_WPDIS$OFF 000000                  __CFG_XINST$OFF 000000  
                        _SetPwm 12A0                  __CFG_STVREN$ON 000000                          _digit1 0015  
                        _digit2 0014                          _digit3 0013                          _digit4 0012  
                 ??_SetupIOPins 0001                          clear_0 12C6           ?_SetupDigitController 0001  
            __size_of_SetupRTCC 0026                ?_SetupOutputPort 0001                    __mediumconst 0000  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
               __CFG_DSBOREN$ON 000000                      __accesstop 0060         __end_of__initialization 12CC  
             __end_of_GetDigit1 1310               __end_of_GetDigit2 130C               __end_of_GetDigit3 1308  
             __end_of_GetDigit4 1304                   ___rparam_used 000001                   __end_of_DPOff 1254  
               __CFG_IOL1WAY$ON 000000            __CFG_WPEND$PAGE_WPFP 000000                  __pcstackCOMRAM 0001  
               __CFG_DSWDTEN$ON 000000                 __CFG_DSWDTPS$G2 000000                      __end_ofPL2 113E  
                    __end_ofPL4 114A                      __end_ofPL6 11D8                      __end_ofPL8 1156  
                     DPOff@dp_n 0001                         ??_DPOff 0001                    ?_unlock_RTCC 0001  
               __CFG_OSC$INTOSC 000000             __end_of_SetupIOPins 1300                     ?_SetCouples 0001  
                    __pnvCOMRAM 001D               __end_of_SetupRTCC 127A                         ?_SetPwm 0001  
                     ?_SetupPWM 0001          ??_SetupDigitController 0003                         _CCP1CON 000FBA  
                       _PADCFG1 000F3C                         _REFOCON 000F3D                         _OSCTUNE 000F9B  
                       _RTCVALH 000F99                         _RTCVALL 000F98                         _RTCWREN 0079FD  
                  ?_GetDateTime 0001                         __Hparam 0000                         __Lparam 0000  
               __size_of_SetPwm 0020                      ??_SetupPWM 0001             __size_of_SetCouples 0074  
                  __psmallconst 0F00                         __pcinit 12C0         __size_of_DisplayRefresh 00DE  
                       __ramtop 0F00                     _SetupIOPins 12F8                         __ptext0 0FF0  
                       __ptext1 1254                         __ptext2 127A                         __ptext3 12E4  
                       __ptext4 12F8                         __ptext5 12EE                         __ptext6 12A0  
                       __ptext7 1156                         __ptext8 10C4                         __ptext9 12D6  
            main@displaycounter 000C            end_of_initialization 12CC             SetupOutputPort@port 0001  
                 __Lmediumconst 0000                         postinc0 000FEE               SetCouples@pDecode 0008  
          __size_of_unlock_RTCC 000E                  GetDateTime@pdt 0001                     _CCP1CONbits 000FBA  
                    main@bright 000E               __CFG_WPFP$PAGE_63 000000                  __end_of_Decode 0F11  
                     _GetDigit1 130C                       _GetDigit2 1308                       _GetDigit3 1304  
                     _GetDigit4 1300             __CFG_MSSP7B_EN$MSK7 000000                  __end_of_SetPwm 12C0  
           start_initialization 12C0                    ??_SetCouples 0002        __size_of_SetupOutputPort 000A  
                    ?_GetDigit1 0001                      ?_GetDigit2 0001                      ?_GetDigit3 0001  
                    ?_GetDigit4 0001            __size_of_GetDateTime 005C                        ??_SetPwm 0001  
                     _SetupRTCC 1254                __CFG_LPT1OSC$OFF 000000               __size_of_SetupPWM 0026  
            __end_of_SetCouples 11CA                  _DisplayRefresh 0F12             main@brightnessdelay 000A  
                   __pbssCOMRAM 0010                        DPOn@dp_n 0001                      ?_SetupRTCC 0001  
        __end_of_DisplayRefresh 0FF0                    ?_SetupIOPins 0001   __size_of_SetupDigitController 000A  
                   __smallconst 0F00                  __size_of_DPOff 0028            __CFG_RTCOSC$T1OSCREF 000000  
             ??_SetupOutputPort 0003                     ??_GetDigit1 0001                     ??_GetDigit2 0001  
                   ??_GetDigit3 0001                     ??_GetDigit4 0001                __CFG_WDTPS$32768 000000  
               ?_DisplayRefresh 0001                        _PSTR1CON 000FBF                        __Hrparam 0000  
                      __Lrparam 0000                        _SetupPWM 127A                     ??_SetupRTCC 0001  
       DisplayController@digits 0001                   ??_unlock_RTCC 0001                        __ptext10 0F12  
                      __ptext11 1300                        __ptext12 1304                        __ptext13 1308  
                      __ptext14 130C                        __ptext15 11D8                        __ptext16 1204  
                      __ptext17 122C                        __ptext18 0000  SetupDigitController@controller 0001  
                 __size_of_DPOn 0028                   __size_of_main 00D4               _DisplayController 11D8  
            ?_DisplayController 0001                    _PSTR1CONbits 000FBF             ??_DisplayController 0001  
          __size_of_SetupIOPins 0008             __end_of_unlock_RTCC 12E4       __end_of_DisplayController 1204  
                 ??_GetDateTime 0002                      _RTCCFGbits 000F3F                      _PPSCONbits 000EFF  
               _SetupOutputPort 12E4    __end_of_SetupDigitController 12F8                ??_DisplayRefresh 0002  
